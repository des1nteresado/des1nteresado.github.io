{"version":3,"sources":["views/Counter/style.js","views/Counter/index.js","components/Counter/CounterContainer.js","components/Counter/CounterParent.js","views/TabsRouter/About.js","validEmail.js","views/Authentication/AuthForm.js","initialStateForm.js","components/Authentication/Login.js","store.js","reducers/reducer.js","views/Authentication/AuthFormRedux.js","components/Authentication/LoginRedux.js","components/Authentication/LoginReduxForm.js","components/Authentication/LRF.js","views/TabsRouter/NotFound.js","views/TabsRouter/SuccessRedux.js","views/TabsRouter/SuccessReduxForm.js","components/TabsRouter/Main.js","components/TabsRouter/App.js","index.js"],"names":["ButtonStyle","backgroundColor","color","border","textTransform","borderRadius","width","height","fontSize","fontFamily","letterSpacing","cursor","GridStyle","justifyContent","marginRight","TextStyle","textAlign","marginTop","CounterContainerStyle","display","flexWrap","FormStyle","alignItems","margin","FormStyleRedux","paddingTop","Counter","props","react_default","a","createElement","style","counterState","count","Grid","container","spacing","item","Button","variant","onClick","handleIncrement","id","handleDecrement","handleReset","CounterContainer","views_Counter","initialState","CounterParent","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","randomInteger","min","max","rand","Math","random","round","newCounters","state","counters","map","counter","setState","handleAddCounter","concat","handleRemoveCounter","length","pop","handleResetCounter","bind","assertThisInitialized","console","log","nextProps","nextState","prevProps","prevState","document","querySelector","snapshot","scrollToComponent","offset","align","duration","_this2","Fragment","counterObj","Counter_CounterContainer","key","React","Component","About","validEmail","email","test","String","toLowerCase","AuthForm","onSubmit","e","handleSubmit","onReset","handleFormReset","renderInputs","type","onClickButton","Typography","formState","formControls","value","data","initialStateForm","label","name","autoComplete","helperText","error","validation","required","password","minLength","Login","setInputsError","control","controlName","validateControl","isValid","trim","validateEmail","validateForm","isValidForm","objectSpread","keys","forEach","preventDefault","onChangeHandler","target","index","TextField","onChange","stringifyFormData","sentData","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","get","err","return","JSON","stringify","event","FormData","reset","Authentication_AuthForm","reducer","combineReducers","form","reduxFormReducer","loginRedux","arguments","action","createStore","AuthFormRedux","react_router_dom","to","pathname","store","getState","textDecoration","LoginRedux","dispatch","Authentication_AuthFormRedux","renderTextField","_ref","input","_ref$meta","meta","touched","invalid","custom","objectWithoutProperties","assign","placeholder","LoginReduxForm","pristine","submitting","emailValue","passwordValue","Field","component","disabled","reduxForm","validate","values","errors","field","selector","formValueSelector","connect","LRF","Authentication_LoginReduxForm","NotFound","gutterBottom","Box","styled","compose","palette","SuccessRedux","location","bgcolor","p","SuccessReduxForm","SuccessReduxForm_Box","Main","react_router","exact","path","process","TabsRouter_Main","ReactDOM","render","es","basename","TabsRouter_App","getElementById"],"mappings":"4LAAMA,+BAAc,CAChBC,gBAAiB,UACjBC,MAAO,OACPC,OAAQ,OACRC,cAAe,YACfC,aAAc,MACdC,MAAO,OACPC,OAAQ,OACRC,SAAU,OACVC,WAAY,QACZC,cAAe,GACfC,OAAQ,YAGNC,EAAY,CACdC,eAAgB,SAChBC,YAAa,QAGXC,EAAY,CACdC,UAAW,SACXR,SAAU,GACVS,UAAW,QAGTC,EAAwB,CAC1BC,QAAS,OACTC,SAAU,OACVP,eAAgB,UAOdQ,EAAY,CACdF,QAAS,OACTC,SAAU,OACVP,eAAgB,SAChBS,WAAY,SACZhB,MAAO,QACPiB,OAAQ,OACRhB,OAAQ,SAGNiB,EAAiB,CACnBL,QAAS,OACTC,SAAU,OACVP,eAAgB,SAChBS,WAAY,SACZhB,MAAO,QACPiB,OAAQ,OACRhB,OAAQ,QACRkB,WAAY,iFClBDC,EA7BC,SAAAC,GACZ,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,KAAGC,MAAOhB,GAAYY,EAAMK,aAAaC,OACzCL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMC,WAAS,EAACJ,MAAOnB,EAAWwB,QAAS,GACvCR,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMG,MAAI,GACNT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAQP,MAAO/B,EAAauC,QAAQ,YAAYrC,MAAM,UAAUsC,QAAS,kBAAMb,EAAMc,gBAAgBd,EAAMK,aAAaU,MAAxH,MAEJd,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMG,MAAI,GACNT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAQP,MAAO/B,EAAauC,QAAQ,YAAYrC,MAAM,UAAUsC,QAAS,kBAAMb,EAAMgB,gBAAgBhB,EAAMK,aAAaU,MAAxH,MAEJd,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMG,MAAI,GACNT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAQP,MAAO/B,EAAauC,QAAQ,YAAYrC,MAAM,UAAUsC,QAAS,kBAAMb,EAAMiB,YAAYjB,EAAMK,aAAaU,MAApH,aCTLG,EANU,SAAAlB,GACrB,OACIC,EAAAC,EAAAC,cAACgB,EAAYnB,sBCEfoB,EAAe,CAAC,CAAEd,MAAO,EAAGS,GAAI,IAiKvBM,cA9JX,SAAAA,EAAYrB,GAAO,IAAAsB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACfC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMzB,KA8CV6B,cAAgB,SAACC,EAAKC,GAClB,IAAIC,EAAOF,EAAM,GAAMG,KAAKC,UAAYH,EAAMD,EAAM,GAEpD,OADAE,EAAOC,KAAKE,MAAMH,IAjDHV,EAqDnBR,gBAAkB,SAACC,GACf,IAAIqB,EAAcd,EAAKe,MAAMC,SAASC,IAAI,SAACC,GACvC,OAAIA,EAAQzB,KAAOA,EACP,CAAET,MAAOkC,EAAQlC,MAAQ,EAAGS,GAAIyB,EAAQzB,IAE7CyB,IAEXlB,EAAKmB,SAAS,CACVH,SAAUF,KA7DCd,EAiEnBN,gBAAkB,SAACD,GACf,IAAIqB,EAAcd,EAAKe,MAAMC,SAASC,IAAI,SAACC,GACvC,OAAIA,EAAQzB,KAAOA,EACP,CAAET,MAAOkC,EAAQlC,MAAQ,EAAGS,GAAIyB,EAAQzB,IAE7CyB,IAEXlB,EAAKmB,SAAS,CACVH,SAAUF,KAzECd,EA6EnBL,YAAc,SAACF,GACX,IAAIqB,EAAcd,EAAKe,MAAMC,SAASC,IAAI,SAACC,GACvC,OAAIA,EAAQzB,KAAOA,EACP,CAAET,MAAO,EAAGS,GAAIyB,EAAQzB,IAE7ByB,IAEXlB,EAAKmB,SAAS,CACVH,SAAUF,KArFCd,EAyFnBoB,iBAAmB,WACf,IAAIN,EAAcd,EAAKe,MAAMC,SAASC,IAAI,SAACC,GACvC,OAAIA,EAAQlC,MAAQ,IAAM,GAAuB,IAAlBkC,EAAQlC,MAC3B,CAAEA,MAAOkC,EAAQlC,MAAQ,EAAGS,GAAIyB,EAAQzB,IAE7CyB,IAEXJ,EAAcA,EAAYO,OAAO,CAAC,CAAErC,MAAO,EAAGS,GAAIO,EAAKO,cAAc,EAAG,QACxEP,EAAKmB,SAAS,CACVH,SAAUF,KAlGCd,EAsGnBsB,oBAAsB,WAClB,IAAIR,EAAcd,EAAKe,MAAMC,SACzBF,EAAYS,OAAS,IACrBT,EAAcA,EAAYG,IAAI,SAACC,GAC3B,OAAIA,EAAQlC,MAAQ,IAAM,GAAuB,IAAlBkC,EAAQlC,MAC3B,CAAEA,MAAOkC,EAAQlC,MAAQ,EAAGS,GAAIyB,EAAQzB,IAE7CyB,KAECM,MAEhBxB,EAAKmB,SAAS,CACVH,SAAUF,KAlHCd,EAsHnByB,mBAAqB,WACjBzB,EAAKmB,SAAS,CACVH,SAAUlB,KAtHdE,EAAKe,MAAQ,CACTC,SAAUlB,GAGdE,EAAKR,gBAAkBQ,EAAKR,gBAAgBkC,KAArBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IACvBA,EAAKN,gBAAkBM,EAAKN,gBAAgBgC,KAArBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IACvBA,EAAKL,YAAcK,EAAKL,YAAY+B,KAAjBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IAEnB4B,QAAQC,IAAI,6BAVG7B,mFAcf4B,QAAQC,IAAI,iFAGMC,EAAWC,GAE7B,OADAH,QAAQC,IAAI,uCACJE,EAAUf,WAAab,KAAKY,MAAMC,yDAGtBgB,EAAWC,GAE/B,OADAL,QAAQC,IAAI,yCACRI,EAAUjB,SAASO,OAAS,IAAMU,EAAUjB,SAASO,OAASpB,KAAKY,MAAMC,SAASO,OAClEW,SAASC,cAAc,wBAGpC,gDAGQH,EAAWC,EAAWG,GACrCR,QAAQC,IAAI,oCACK,OAAbO,IACAR,QAAQC,IAAIO,GACZC,IAAkBD,EAAU,CACxBE,OAAQ,IACRC,MAAO,SACPC,SAAU,uDAMlBZ,QAAQC,IAAI,uEAgFP,IAAAY,EAAAtC,KAEL,OADAyB,QAAQC,IAAI,wBAERlD,EAAAC,EAAAC,cAACF,EAAAC,EAAM8D,SAAP,KACI/D,EAAAC,EAAAC,cAAA,KAAGC,MAAOhB,GAAYqC,KAAKY,MAAMC,SAASO,QAC1C5C,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMC,WAAS,EAACJ,MAAOnB,EAAWwB,QAAS,GACvCR,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMG,MAAI,GACNT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAQE,QAAS,kBAAMkD,EAAKrB,qBAA5B,gBAEJzC,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMG,MAAI,GACNT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAQE,QAAS,kBAAMkD,EAAKnB,wBAA5B,mBAEJ3C,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMG,MAAI,GACNT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAQE,QAAS,kBAAMkD,EAAKhB,uBAA5B,mBAGR9C,EAAAC,EAAAC,cAAA,OAAKY,GAAG,WAAWX,MAAOb,GAElBkC,KAAKY,MAAMC,SAASC,IAAI,SAAC0B,GAAD,OACpBhE,EAAAC,EAAAC,cAAC+D,EAAD,CACIjD,YAAa8C,EAAK9C,YAClBH,gBAAiBiD,EAAKjD,gBACtBE,gBAAiB+C,EAAK/C,gBACtBmD,IAAKF,EAAWlD,GAChBV,aAAc4D,eArJlBG,IAAMC,WCAnBC,EAND,kBACVrE,EAAAC,EAAAC,cAAA,OAAKC,MAAOhB,GACVa,EAAAC,EAAAC,cAAA,sCCLSoE,EAAA,SAACC,GAEd,MADqB,uJACCC,KAAKC,OAAOF,GAAOG,kCCsC5BC,EAlCE,SAAA5E,GACb,OACIC,EAAAC,EAAAC,cAACF,EAAAC,EAAM8D,SAAP,KACE/D,EAAAC,EAAAC,cAAA,QAAMC,MAAOV,EAAWmF,SAAU,SAACC,GAAD,OAAO9E,EAAM+E,aAAaD,IAAIE,QAAShF,EAAMiF,iBAEzEjF,EAAMkF,eAERjF,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAQwE,KAAK,SAAS/E,MAAO/B,EAAawC,QAAS,SAACiE,GAAD,OAAO9E,EAAMoF,cAAcN,KAA9E,WAEJ7E,EAAAC,EAAAC,cAAA,OAAKC,MAAOhB,GACVa,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAYzE,QAAQ,MAApB,UACUZ,EAAMsF,UAAUC,aAAhB,MAAsCC,OAEhDvF,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAYzE,QAAQ,MAApB,aACaZ,EAAMsF,UAAUC,aAAhB,SAAyCC,OAEtDvF,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAYzE,QAAQ,MAApB,oBAGAX,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAYzE,QAAQ,MACjBZ,EAAMsF,UAAUG,SC1BfC,EAAA,CACZD,KAAM,KACNF,aAAc,CACVf,MAAO,CACHzD,GAAI,uBACJyE,MAAO,GACPL,KAAM,QACNQ,MAAO,QACPC,KAAM,QACNhG,OAAQ,SACRgB,QAAS,WACTiF,aAAc,QACdC,WAAY,GACZC,OAAO,EACPC,WAAY,CACRC,UAAU,EACVzB,OAAO,IAGf0B,SAAU,CACNnF,GAAI,0BACJyE,MAAO,GACPL,KAAM,WACNQ,MAAO,WACPC,KAAM,WACNhG,OAAQ,SACRgB,QAAS,WACTiF,aAAc,mBACdC,WAAY,GACZC,OAAO,EACPC,WAAY,CACRC,UAAU,EACVE,UAAW,MC1BNC,cACnB,SAAAA,EAAYpG,GAAO,IAAAsB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2E,IACjB9E,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6E,GAAAxE,KAAAH,KAAMzB,KAYRqG,eAAiB,SAACC,EAASf,EAAcgB,GACvCD,EAAQP,OAASzE,EAAKkF,gBAAgBF,EAAQd,MAAOc,EAAQN,YACzDM,EAAQP,OAA0B,UAAjBO,EAAQnB,KAC3BmB,EAAQR,WAAa,wBACZQ,EAAQP,OAA0B,aAAjBO,EAAQnB,KAClCmB,EAAQR,WAAa,iCAGrBQ,EAAQR,WAAa,GAEvBP,EAAagB,GAAeD,EAC5BhF,EAAKmB,SAAS,CACZ8C,kBAzBejE,EA6BnBkF,gBAAkB,SAAChB,EAAOQ,GACxB,IAAIS,GAAU,EAEd,OAAKT,IAIDA,EAAWC,WACbQ,EAA2B,KAAjBjB,EAAMkB,QAAiBD,GAG/BT,EAAWxB,QACbiC,EAAUE,EAAcnB,IAAUiB,GAGhCT,EAAWG,YACbM,EAAUjB,EAAM3C,QAAUmD,EAAWG,WAAaM,GAG7CA,IAhDUnF,EAmDnBsF,aAAe,SAAC9B,GACd,IAAI+B,GAAc,EACZtB,EAAYhE,OAAAuF,EAAA,EAAAvF,CAAA,GAAQD,EAAKe,MAAMkD,cAWrC,OATAhE,OAAOwF,KAAKzF,EAAKe,MAAMkD,cAAcyB,QAAQ,SAACT,GAC5C,IAAID,EAAO/E,OAAAuF,EAAA,EAAAvF,CAAA,GAAQD,EAAKe,MAAMkD,aAAagB,IAC3CjF,EAAK+E,eAAeC,EAASf,EAAcgB,GAC3CM,IAAgBP,EAAQP,QAGrBc,GACH/B,EAAEmC,iBAEGJ,GAhEUvF,EAmEnB4F,gBAAkB,SAACpC,EAAGyB,GACpB,IAAMhB,EAAYhE,OAAAuF,EAAA,EAAAvF,CAAA,GAAQD,EAAKe,MAAMkD,cAC/Be,EAAO/E,OAAAuF,EAAA,EAAAvF,CAAA,GAAQgE,EAAagB,IAClCD,EAAQd,MAAQV,EAAEqC,OAAO3B,MACzBlE,EAAK+E,eAAeC,EAASf,EAAcgB,IAvE1BjF,EA0EnB8D,cAAgB,SAACN,GACf,OAAOxD,EAAKsF,aAAa9B,IA3ERxD,EA8EnB4D,aAAe,WACb,OAAO3D,OAAOwF,KAAKzF,EAAKe,MAAMkD,cAAchD,IAAI,SAACgE,EAAaa,GAC5D,IAAMd,EAAUhF,EAAKe,MAAMkD,aAAagB,GACxC,OACEtG,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CACElD,IAAKoC,EAAca,EACnBjC,KAAMmB,EAAQnB,KACdpE,GAAIuF,EAAQvF,GACZyE,MAAOc,EAAQd,MACfG,MAAOW,EAAQX,MACfC,KAAMU,EAAQV,KACdhG,OAAQ0G,EAAQ1G,OAChBgB,QAAS0F,EAAQ1F,QACjBiF,aAAcS,EAAQT,aACtBC,WAAYQ,EAAQR,WACpBC,MAAOO,EAAQP,MACfuB,SAAU,SAAAxC,GAAC,OAAIxD,EAAK4F,gBAAgBpC,EAAGyB,SA9F5BjF,EAoGnBiG,kBAAoB,SAACC,GACnB,IAAM/B,EAAO,GADmBgC,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAEhC,QAAAC,EAAAC,EAAgBN,EAAST,OAAzBgB,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAAiC,KAAxBtD,EAAwB0D,EAAArC,MAC/BC,EAAKtB,GAAOqD,EAASW,IAAIhE,IAHK,MAAAiE,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAK,EAAAO,QAAAP,EAAAO,SAAA,WAAAX,EAAA,MAAAC,GAKhC,OAAOW,KAAKC,UAAU9C,IAzGLnE,EAsHnB2D,gBAAkB,SAACH,GACjBxD,EAAKmB,SAAS,kBAAMnB,EAAKF,gBArHzBE,EAAKe,MAAQjB,EACbE,EAAKyD,aAAezD,EAAKyD,aAAa/B,KAAlBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IACpBA,EAAK2D,gBAAkB3D,EAAK2D,gBAAgBjC,KAArBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IACvBA,EAAK+E,eAAiB/E,EAAK+E,eAAerD,KAApBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IACtBA,EAAKkF,gBAAkBlF,EAAKkF,gBAAgBxD,KAArBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IACvBA,EAAKsF,aAAetF,EAAKsF,aAAa5D,KAAlBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IACpBA,EAAK8D,cAAgB9D,EAAK8D,cAAcpC,KAAnBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IACrBA,EAAK4D,aAAe5D,EAAK4D,aAAalC,KAAlBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IACpBA,EAAKiG,kBAAoBjG,EAAKiG,kBAAkBvE,KAAvBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IAVRA,4EA4GNkH,GACX,IAAM/C,EAAO,IAAIgD,SAASD,EAAMrB,QAChCqB,EAAMvB,iBACNuB,EAAMrB,OAAOuB,QACbjH,KAAKgB,SAAS,CACZgD,KAAMhE,KAAK8F,kBAAkB9B,KAE/BvC,QAAQC,IAAI,UAAY1B,KAAKY,MAAMkD,aAAX,MAAiCC,MAAQ,cAAgB/D,KAAKY,MAAMkD,aAAX,SAAoCC,wCAQrH,OACEvF,EAAAC,EAAAC,cAACF,EAAAC,EAAM8D,SAAP,KACE/D,EAAAC,EAAAC,cAACwI,EAAD,CACErD,UAAW7D,KAAKY,MAChB0C,aAActD,KAAKsD,aACnBE,gBAAiBxD,KAAKwD,gBACtBG,cAAe3D,KAAK2D,cACpBF,aAAczD,KAAKyD,uBAnIMd,IAAMC,4BCFnCuE,EAAUC,YAAgB,CAC5BC,KAAMC,IACNC,WCJW,WAAkC,IAAjC3G,EAAiC4G,UAAApG,OAAA,QAAA+E,IAAAqB,UAAA,GAAAA,UAAA,GAAzB7H,EAAc8H,EAAWD,UAAApG,OAAA,EAAAoG,UAAA,QAAArB,EAC7C,OAAQsB,EAAO/D,MACX,IAAK,mBAWD,OAVA+D,EAAO5C,QAAQP,OAASmD,EAAO1C,gBAAgB0C,EAAO5C,QAAQd,MAAO0D,EAAO5C,QAAQN,YAChFkD,EAAO5C,QAAQP,OAAiC,UAAxBmD,EAAO5C,QAAQnB,KACvC+D,EAAO5C,QAAQR,WAAa,wBACrBoD,EAAO5C,QAAQP,OAAiC,aAAxBmD,EAAO5C,QAAQnB,KAC9C+D,EAAO5C,QAAQR,WAAa,iCAG5BoD,EAAO5C,QAAQR,WAAa,GAEhCoD,EAAO3D,aAAa2D,EAAO3C,aAAe2C,EAAO5C,QAC1C/E,OAAAuF,EAAA,EAAAvF,CAAA,GAAKc,EAAZ,CAAmBkD,aAAc2D,EAAO3D,eAC5C,IAAK,WACD,OAAOhE,OAAAuF,EAAA,EAAAvF,CAAA,GAAKc,EAAZ,CAAmBoD,KAAMyD,EAAOzD,OAGxC,OAAOpD,KDXI8G,cAAYP,GEmBZQ,EArBO,SAAApJ,GACpB,OACEC,EAAAC,EAAAC,cAACF,EAAAC,EAAM8D,SAAP,KACE/D,EAAAC,EAAAC,cAAA,QAAMC,MAAOV,EAAWmF,SAAU,SAACC,GAAD,OAAO9E,EAAM+E,aAAaD,KAEtD9E,EAAMkF,eAERjF,EAAAC,EAAAC,cAACkJ,EAAA,EAAD,CAAMC,GAAI,CAAEC,SAAU,uBAAwBlH,MAAO,CAAEmH,MAAOA,EAAMC,WAAWT,aAAc5I,MAAO,CAAEsJ,eAAgB,SACpHzJ,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAQwE,KAAK,SAAS/E,MAAO/B,EAAawC,QAAS,SAACiE,GAAD,OAAO9E,EAAMoF,cAAcN,KAA9E,cC4FG6E,cApGb,SAAAA,EAAY3J,GAAO,IAAAsB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkI,IACjBrI,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoI,GAAA/H,KAAAH,KAAMzB,KAQRwG,gBAAkB,SAAChB,EAAOQ,GACxB,IAAIS,GAAU,EAEd,OAAKT,IAIDA,EAAWC,WACbQ,EAA2B,KAAjBjB,EAAMkB,QAAiBD,GAG/BT,EAAWxB,QACbiC,EAAUE,EAAcnB,IAAUiB,GAGhCT,EAAWG,YACbM,EAAUjB,EAAM3C,QAAUmD,EAAWG,WAAaM,GAG7CA,IA5BUnF,EA+BnBsF,aAAe,SAAC9B,GACd,IAAI+B,GAAc,EACZtB,EAAYhE,OAAAuF,EAAA,EAAAvF,CAAA,GAAQiI,EAAMC,WAAWT,WAAWzD,cAWtD,OATAhE,OAAOwF,KAAKyC,EAAMC,WAAWT,WAAWzD,cAAcyB,QAAQ,SAACT,GAC7D,IAAID,EAAO/E,OAAAuF,EAAA,EAAAvF,CAAA,GAAQiI,EAAMC,WAAWT,WAAWzD,aAAagB,IAC5DiD,EAAMI,SAAS,CAAEzE,KAAM,mBAAoBmB,QAASA,EAASf,aAAcA,EAAcgB,YAAaA,EAAaC,gBAAiBlF,EAAKkF,kBACzIK,IAAgBP,EAAQP,QAGrBc,GACH/B,EAAEmC,iBAEGJ,GA5CUvF,EA+CnB4F,gBAAkB,SAACpC,EAAGyB,GACpB,IAAMhB,EAAYhE,OAAAuF,EAAA,EAAAvF,CAAA,GAAQiI,EAAMC,WAAWT,WAAWzD,cAChDe,EAAO/E,OAAAuF,EAAA,EAAAvF,CAAA,GAAQgE,EAAagB,IAClCD,EAAQd,MAAQV,EAAEqC,OAAO3B,MACzBgE,EAAMI,SAAS,CAAEzE,KAAM,mBAAoBmB,QAASA,EAASf,aAAcA,EAAcgB,YAAaA,EAAaC,gBAAiBlF,EAAKkF,mBAnDxHlF,EAsDnB8D,cAAgB,SAACN,GACf,OAAOxD,EAAKsF,aAAa9B,IAvDRxD,EA0DnB4D,aAAe,WACb,OAAO3D,OAAOwF,KAAKyC,EAAMC,WAAWT,WAAWzD,cAAchD,IAAI,SAACgE,EAAaa,GAC7E,IAAMd,EAAUkD,EAAMC,WAAWT,WAAWzD,aAAagB,GACzD,OACEtG,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CACElD,IAAKoC,EAAca,EACnBjC,KAAMmB,EAAQnB,KACdpE,GAAIuF,EAAQvF,GACZyE,MAAOc,EAAQd,MACfG,MAAOW,EAAQX,MACfC,KAAMU,EAAQV,KACdhG,OAAQ0G,EAAQ1G,OAChBgB,QAAS0F,EAAQ1F,QACjBiF,aAAcS,EAAQT,aACtBC,WAAYQ,EAAQR,WACpBC,MAAOO,EAAQP,MACfuB,SAAU,SAAAxC,GAAC,OAAIxD,EAAK4F,gBAAgBpC,EAAGyB,SAxE7CjF,EAAKyD,aAAezD,EAAKyD,aAAa/B,KAAlBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IACpBA,EAAKkF,gBAAkBlF,EAAKkF,gBAAgBxD,KAArBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IACvBA,EAAKsF,aAAetF,EAAKsF,aAAa5D,KAAlBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IACpBA,EAAK8D,cAAgB9D,EAAK8D,cAAcpC,KAAnBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IACrBA,EAAK4D,aAAe5D,EAAK4D,aAAalC,KAAlBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IANHA,4EAgFNkH,GACXgB,EAAMI,SAAS,CAAEzE,KAAM,WAAYM,KAAM,CAAEjB,MAAOgF,EAAMC,WAAWT,WAAWzD,aAA5B,MAAkDC,MAAOU,SAAUsD,EAAMC,WAAWT,WAAWzD,aAA5B,SAAqDC,SAC1KgD,EAAMvB,kDAIN,OACEhH,EAAAC,EAAAC,cAACF,EAAAC,EAAM8D,SAAP,KACE/D,EAAAC,EAAAC,cAAC0J,EAAD,CACEvE,UAAWkE,EAAMC,WAAWT,WAC5BjE,aAActD,KAAKsD,aACnBE,gBAAiBxD,KAAKwD,gBACtBG,cAAe3D,KAAK2D,cACpBF,aAAczD,KAAKyD,uBA9FJd,IAAMC,+CCyBzByF,EAAkB,SAAAC,GAAA,IACtBpE,EADsBoE,EACtBpE,MACAqE,EAFsBD,EAEtBC,MAFsBC,EAAAF,EAGtBG,KAAQC,EAHcF,EAGdE,QAASC,EAHKH,EAGLG,QAASrE,EAHJkE,EAGIlE,MACvBsE,EAJmB9I,OAAA+I,EAAA,EAAA/I,CAAAwI,EAAA,iCAMpB9J,EAAAC,EAAAC,cAACkH,EAAA,EAAD9F,OAAAgJ,OAAA,CACE5E,MAAOA,EACP6E,YAAa7E,EACbI,MAAOoE,GAAWC,EAClBtE,WAAYqE,GAAWpE,GACnBiE,EACAK,KAINI,EAAiB,SAAAzK,GAAS,IACpB+E,EAA2E/E,EAA3E+E,aAAc2F,EAA6D1K,EAA7D0K,SAAUC,EAAmD3K,EAAnD2K,WAAYC,EAAuC5K,EAAvC4K,WAAYC,EAA2B7K,EAA3B6K,cAAeT,EAAYpK,EAAZoK,QACvE,OACEnK,EAAAC,EAAAC,cAACF,EAAAC,EAAM8D,SAAP,KACE/D,EAAAC,EAAAC,cAAA,QAAMC,MAAOP,EAAgBgF,SAAUE,GACrC9E,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CAAOlF,KAAK,QAAQhF,QAAQ,WAAWmK,UAAWjB,EAAiBnE,MAAM,UACzE1F,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CAAOlF,KAAK,WAAWT,KAAK,WAAWvE,QAAQ,WAAWmK,UAAWjB,EAAiBnE,MAAM,aAC5F1F,EAAAC,EAAAC,cAACkJ,EAAA,EAAD,CAAMC,GAAI,CACRC,SAAU,4BAA6BlH,MAAO,CAC5CmH,MAAO,CACLhF,MACEoG,EAAY1E,SAAU2E,KAG3BzK,MAAO,CAAEsJ,eAAgB,SAC1BzJ,EAAAC,EAAAC,cAAA,UAAQgF,KAAK,SAAS/E,MAAO/B,EAAa2M,SAAUZ,GAAWO,GAAcD,GAA7E,UAKJzK,EAAAC,EAAAC,cAAA,OAAKC,MAAOhB,GACVa,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAYzE,QAAQ,MAApB,UACUgK,GAEV3K,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAYzE,QAAQ,MAApB,aACaiK,MAOrBJ,EAAiBQ,YAAU,CACzBnC,KAAM,iBACNoC,SAvEe,SAAAC,GACf,IAAMC,EAAS,GAiBf,MAhBuB,CACrB,QACA,YAEapE,QAAQ,SAAAqE,GAChBF,EAAOE,KACVD,EAAOC,GAAS,cAGf1E,EAAcwE,EAAO3G,SACxB4G,EAAO5G,MAAQ,yBAEM,MAAnB2G,EAAOjF,UAAsBiF,EAAOjF,SAASrD,QAAU,IAEzDuI,EAAOlF,SAAW,aAEbkF,IAmDQH,CAGdR,GAGH,IAAMa,EAAWC,YAAkB,kBAWpBd,EAVfA,EAAiBe,YAAQ,SAAAnJ,GAIvB,MAAO,CACLuI,WAHiBU,EAASjJ,EAAO,SAIjCwI,cAHoBS,EAASjJ,EAAO,cAHvBmJ,CAQdf,GCrFYgB,EANH,WACR,OACIxL,EAAAC,EAAAC,cAACuL,EAAD,OCOQC,EARC,kBACb1L,EAAAC,EAAAC,cAAA,OAAKC,MAAOhB,GACTa,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAYzE,QAAQ,KAAKmK,UAAU,KAAKa,cAAY,GAApD,6DCADC,GAAMC,aAAO,MAAPA,CACTC,aACGtL,KACAuL,OAoBSC,GAhBM,SAACjM,GAAU,IACrBwJ,EAAUxJ,EAAMkM,SAAS7J,MAAzBmH,MACR,OACGvJ,EAAAC,EAAAC,cAAA,OAAKC,MAAOhB,GACTa,EAAAC,EAAAC,cAAC0L,GAAD,CAAKtN,MAAM,QAAQ4N,QAAQ,OAAOC,EAAG,GAClCnM,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAYzE,QAAQ,MAApB,UACW4I,EAAMjE,aAAN,MAA4BC,OAEvCvF,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAYzE,QAAQ,MAApB,aACc4I,EAAMjE,aAAN,SAA+BC,UChBnDqG,GAAMC,aAAO,MAAPA,CACTC,aACGtL,KACAuL,OAoBSK,GAhBU,SAACrM,GAAU,IACzBwJ,EAAUxJ,EAAMkM,SAAS7J,MAAzBmH,MACR,OACGvJ,EAAAC,EAAAC,cAAA,OAAKC,MAAOhB,GACTa,EAAAC,EAAAC,cAACmM,GAAD,CAAK/N,MAAM,QAAQ4N,QAAQ,OAAOC,EAAG,GAClCnM,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAYzE,QAAQ,MAApB,UACW4I,EAAMhF,OAEjBvE,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAYzE,QAAQ,MAApB,aACc4I,EAAMtD,aCOjBqG,GAjBF,kBACTtM,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAACqM,EAAA,EAAD,KACIvM,EAAAC,EAAAC,cAACqM,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAMC,kBACnB1M,EAAAC,EAAAC,cAACqM,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAMC,qBAAmC5B,UAAWzG,IACjErE,EAAAC,EAAAC,cAACqM,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAMC,wBAAsC5B,UAAW1J,IACpEpB,EAAAC,EAAAC,cAACqM,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAMC,qBAAmC5B,UAAW3E,IACjEnG,EAAAC,EAAAC,cAACqM,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAMC,2BAAyC5B,UAAWpB,IACvE1J,EAAAC,EAAAC,cAACqM,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAMC,mCAAiD5B,UAAWkB,KAC/EhM,EAAAC,EAAAC,cAACqM,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAMC,gCAA8C5B,UAAWU,IAC5ExL,EAAAC,EAAAC,cAACqM,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAMC,wCAAsD5B,UAAWsB,KACpFpM,EAAAC,EAAAC,cAACqM,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAMC,mBAAiC5B,UAAWY,IAC/D1L,EAAAC,EAAAC,cAACqM,EAAA,EAAD,CAAUlD,GAAIqD,wBCZXnB,eADS,SAAAnJ,GAAK,MAAK,CAAEoD,KAAMpD,EAAM2G,WAAWvD,KAAMF,aAAclD,EAAM2G,WAAWzD,eACjFiG,CAPH,kBACJvL,EAAAC,EAAAC,cAACF,EAAAC,EAAM8D,SAAP,KACI/D,EAAAC,EAAAC,cAACyM,GAAD,SCAZC,IAASC,OACL7M,EAAAC,EAAAC,cAAC4M,EAAA,EAAD,CAAUvD,MAAOA,GACbvJ,EAAAC,EAAAC,cAACkJ,EAAA,EAAD,CAAe2D,SAAUL,gBACrB1M,EAAAC,EAAAC,cAAC8M,GAAD,QAGRzJ,SAAS0J,eAAe","file":"static/js/main.80ace540.chunk.js","sourcesContent":["const ButtonStyle = {\r\n    backgroundColor: \"#b71c1c\",\r\n    color: \"#fff\",\r\n    border: 'none',\r\n    textTransform: 'uppercase',\r\n    borderRadius: '5px',\r\n    width: '64px',\r\n    height: '36px',\r\n    fontSize: '14px',\r\n    fontFamily: 'Arial',\r\n    letterSpacing: 0.5,\r\n    cursor: 'Pointer'\r\n};\r\n\r\nconst GridStyle = {\r\n    justifyContent: \"center\",\r\n    marginRight: \"80px\"\r\n};\r\n\r\nconst TextStyle = {\r\n    textAlign: \"center\",\r\n    fontSize: 22,\r\n    marginTop: \"30px\"\r\n}\r\n\r\nconst CounterContainerStyle = {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center'\r\n};\r\n\r\nconst TabStyle = {\r\n    indicatorColor: 'secondary',\r\n}\r\n\r\nconst FormStyle = {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: '250px',\r\n    margin: 'auto',\r\n    height: '200px'\r\n}\r\n\r\nconst FormStyleRedux = {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: '250px',\r\n    margin: 'auto',\r\n    height: '230px',\r\n    paddingTop: '7px'\r\n}\r\n\r\nconst FormWrapperStyle = {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: '250px'\r\n}\r\n\r\nconst FormButStyle = {\r\n    backgroundColor: \"#b71c1c\",\r\n    color: '#fff',\r\n    marginTop: '10px'\r\n}\r\n\r\nconst MainFormStyle = {\r\n    display: 'flex',\r\n    justifyContent: 'space-between'\r\n}\r\n\r\nexport { ButtonStyle, TextStyle, GridStyle, MainFormStyle,  CounterContainerStyle, TabStyle, FormStyle, FormWrapperStyle, FormButStyle, FormStyleRedux };\r\n","import React from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PropTypes from 'prop-types';\r\nimport { ButtonStyle, TextStyle, GridStyle } from './style';\r\n\r\nconst Counter = props => {\r\n    return (\r\n        <div>\r\n            <p style={TextStyle}>{props.counterState.count}</p>\r\n            <Grid container style={GridStyle} spacing={5}>\r\n                <Grid item>\r\n                    <Button style={ButtonStyle} variant=\"contained\" color=\"primary\" onClick={() => props.handleIncrement(props.counterState.id)}>+</Button>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Button style={ButtonStyle} variant=\"contained\" color=\"primary\" onClick={() => props.handleDecrement(props.counterState.id)}>-</Button>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Button style={ButtonStyle} variant=\"contained\" color=\"primary\" onClick={() => props.handleReset(props.counterState.id)}>reset</Button>\r\n                </Grid>\r\n            </Grid>\r\n        </div >\r\n    );\r\n}\r\n\r\nCounter.propTypes = {\r\n    count: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number\r\n    ]),\r\n    handleIncrement: PropTypes.func.isRequired,\r\n    handleDecrement: PropTypes.func.isRequired,\r\n    handleReset: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Counter;\r\n","import React from \"react\";\r\nimport Counter from \"../../views/Counter\";\r\n\r\nconst CounterContainer = props => {\r\n    return (\r\n        <Counter {...props} />\r\n    );\r\n}\r\n\r\nexport default CounterContainer;","import React from \"react\";\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport CounterContainer from \"./CounterContainer\";\r\nimport { CounterContainerStyle, TextStyle, GridStyle } from '../../views/Counter/style'\r\nimport scrollToComponent from 'react-scroll-to-component';\r\n\r\nconst initialState = [{ count: 0, id: 1 }]\r\n\r\nclass CounterParent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            counters: initialState\r\n        };\r\n\r\n        this.handleIncrement = this.handleIncrement.bind(this);\r\n        this.handleDecrement = this.handleDecrement.bind(this);\r\n        this.handleReset = this.handleReset.bind(this);\r\n\r\n        console.log(\"constructor:CounterParent\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"componentDidMount:CounterParent\");\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        console.log(\"shouldComponentUpdate:CounterParent\");\r\n        return (nextState.counters !== this.state.counters);\r\n    }\r\n\r\n    getSnapshotBeforeUpdate(prevProps, prevState) {\r\n        console.log(\"getSnapshotBeforeUpdate:CounterParent\")\r\n        if (prevState.counters.length > 30 && prevState.counters.length < this.state.counters.length) {\r\n            const element = document.querySelector(\"#counters:last-child\");\r\n            return element;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        console.log(\"componentDidUpdate:CounterParent\")\r\n        if (snapshot !== null) {\r\n            console.log(snapshot);\r\n            scrollToComponent(snapshot, {\r\n                offset: 1000,\r\n                align: 'bottom',\r\n                duration: 1500\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        console.log(\"componentWillUnmount:CounterParent\");\r\n    }\r\n\r\n    randomInteger = (min, max) => {\r\n        var rand = min - 0.5 + Math.random() * (max - min + 1)\r\n        rand = Math.round(rand);\r\n        return rand;\r\n    }\r\n\r\n    handleIncrement = (id) => {\r\n        let newCounters = this.state.counters.map((counter) => {\r\n            if (counter.id === id) {\r\n                return ({ count: counter.count + 1, id: counter.id })\r\n            }\r\n            return counter;\r\n        })\r\n        this.setState({\r\n            counters: newCounters\r\n        });\r\n    }\r\n\r\n    handleDecrement = (id) => {\r\n        let newCounters = this.state.counters.map((counter) => {\r\n            if (counter.id === id) {\r\n                return ({ count: counter.count - 1, id: counter.id })\r\n            }\r\n            return counter;\r\n        })\r\n        this.setState({\r\n            counters: newCounters\r\n        });\r\n    }\r\n\r\n    handleReset = (id) => {\r\n        let newCounters = this.state.counters.map((counter) => {\r\n            if (counter.id === id) {\r\n                return ({ count: 0, id: counter.id })\r\n            }\r\n            return counter;\r\n        })\r\n        this.setState({\r\n            counters: newCounters\r\n        });\r\n    }\r\n\r\n    handleAddCounter = () => {\r\n        let newCounters = this.state.counters.map((counter) => {\r\n            if (counter.count % 2 === 0 && counter.count !== 0) {\r\n                return ({ count: counter.count + 1, id: counter.id })\r\n            }\r\n            return counter;\r\n        })\r\n        newCounters = newCounters.concat([{ count: 0, id: this.randomInteger(0, 1000000) }]);\r\n        this.setState({\r\n            counters: newCounters\r\n        });\r\n    }\r\n\r\n    handleRemoveCounter = () => {\r\n        let newCounters = this.state.counters;\r\n        if (newCounters.length > 1) {\r\n            newCounters = newCounters.map((counter) => {\r\n                if (counter.count % 2 !== 0 && counter.count !== 0) {\r\n                    return ({ count: counter.count - 1, id: counter.id })\r\n                }\r\n                return counter;\r\n            })\r\n            newCounters.pop();\r\n        }\r\n        this.setState({\r\n            counters: newCounters\r\n        });\r\n    };\r\n\r\n    handleResetCounter = () => {\r\n        this.setState({\r\n            counters: initialState\r\n        });\r\n    }\r\n\r\n    render() {\r\n        console.log(\"render:CounterParent\")\r\n        return (\r\n            <React.Fragment>\r\n                <p style={TextStyle}>{this.state.counters.length}</p>\r\n                <Grid container style={GridStyle} spacing={5}>\r\n                    <Grid item>\r\n                        <Button onClick={() => this.handleAddCounter()}>add counter</Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button onClick={() => this.handleRemoveCounter()}>remove counter</Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button onClick={() => this.handleResetCounter()}>reset counter</Button>\r\n                    </Grid>\r\n                </Grid>\r\n                <div id=\"counters\" style={CounterContainerStyle}>\r\n                    {\r\n                        this.state.counters.map((counterObj) =>\r\n                            <CounterContainer\r\n                                handleReset={this.handleReset}\r\n                                handleIncrement={this.handleIncrement}\r\n                                handleDecrement={this.handleDecrement}\r\n                                key={counterObj.id}\r\n                                counterState={counterObj}\r\n                            />\r\n                        )\r\n                    }\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CounterParent;","import React from 'react';\r\nimport { TextStyle } from '../Counter/style'\r\n\r\nconst About = () => (\r\n    <div style={TextStyle}>\r\n      <h1>About company!</h1>\r\n    </div>\r\n  )\r\n\r\nexport default About;","export default (email) => {\r\n  let validStructure = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@(([[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return validStructure.test(String(email).toLowerCase());\r\n};","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { FormStyle, ButtonStyle, TextStyle } from '../../views/Counter/style';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AuthForm = props => {\r\n    return (\r\n        <React.Fragment>\r\n          <form style={FormStyle} onSubmit={(e) => props.handleSubmit(e)} onReset={props.handleFormReset}>\r\n              {\r\n                props.renderInputs()\r\n              }\r\n              <Button type='submit' style={ButtonStyle} onClick={(e) => props.onClickButton(e)} > Send </Button>\r\n          </form>\r\n          <div style={TextStyle}>\r\n            <Typography variant=\"h5\">\r\n              Email: {props.formState.formControls['email'].value}\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              Password: {props.formState.formControls['password'].value}\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              Data to be sent:\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              {props.formState.data}\r\n            </Typography>\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n}\r\n\r\nAuthForm.propTypes = {\r\n    handleSubmit: PropTypes.func.isRequired,\r\n    handleFormReset: PropTypes.func.isRequired,\r\n    onClickButton: PropTypes.func.isRequired,\r\n    renderInputs: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AuthForm;","export default  {\r\n    data: null,\r\n    formControls: {\r\n        email: {\r\n            id: 'outlined-email-input',\r\n            value: '',\r\n            type: 'email',\r\n            label: 'Email',\r\n            name: 'email',\r\n            margin: 'normal',\r\n            variant: 'outlined',\r\n            autoComplete: 'email',\r\n            helperText: '',\r\n            error: false,\r\n            validation: {\r\n                required: true,\r\n                email: true\r\n            }\r\n        },\r\n        password: {\r\n            id: 'outlined-password-input',\r\n            value: '',\r\n            type: 'password',\r\n            label: 'Password',\r\n            name: 'password',\r\n            margin: 'normal',\r\n            variant: 'outlined',\r\n            autoComplete: \"current-password\",\r\n            helperText: '',\r\n            error: false,\r\n            validation: {\r\n                required: true,\r\n                minLength: 6\r\n            }\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport validateEmail from '../../validEmail';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AuthForm from '../../views/Authentication/AuthForm';\r\nimport initialState from '../../initialStateForm';\r\n\r\nexport default class Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = initialState;\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleFormReset = this.handleFormReset.bind(this);\r\n    this.setInputsError = this.setInputsError.bind(this);\r\n    this.validateControl = this.validateControl.bind(this);\r\n    this.validateForm = this.validateForm.bind(this);\r\n    this.onClickButton = this.onClickButton.bind(this);\r\n    this.renderInputs = this.renderInputs.bind(this);\r\n    this.stringifyFormData = this.stringifyFormData.bind(this);\r\n  }\r\n\r\n  setInputsError = (control, formControls, controlName) => {\r\n    control.error = !this.validateControl(control.value, control.validation);\r\n    if (control.error && control.type === 'email') {\r\n      control.helperText = 'Invalid email adress.';\r\n    } else if (control.error && control.type === 'password') {\r\n      control.helperText = 'Min. pass length 6 characters.';\r\n    }\r\n    else {\r\n      control.helperText = '';\r\n    }\r\n    formControls[controlName] = control;\r\n    this.setState({\r\n      formControls\r\n    });\r\n  }\r\n\r\n  validateControl = (value, validation) => {\r\n    let isValid = true;\r\n\r\n    if (!validation) {\r\n      return true;\r\n    }\r\n\r\n    if (validation.required) {\r\n      isValid = value.trim() !== '' && isValid;\r\n    }\r\n\r\n    if (validation.email) {\r\n      isValid = validateEmail(value) && isValid;\r\n    }\r\n\r\n    if (validation.minLength) {\r\n      isValid = value.length >= validation.minLength && isValid;\r\n    }\r\n\r\n    return isValid;\r\n  }\r\n\r\n  validateForm = (e) => {\r\n    let isValidForm = true;\r\n    const formControls = { ...this.state.formControls };\r\n\r\n    Object.keys(this.state.formControls).forEach((controlName) => {\r\n      let control = { ...this.state.formControls[controlName] };\r\n      this.setInputsError(control, formControls, controlName);\r\n      isValidForm &= !control.error;\r\n    });\r\n\r\n    if (!isValidForm)\r\n      e.preventDefault();\r\n\r\n    return isValidForm;\r\n  }\r\n\r\n  onChangeHandler = (e, controlName) => {\r\n    const formControls = { ...this.state.formControls };\r\n    const control = { ...formControls[controlName] };\r\n    control.value = e.target.value;\r\n    this.setInputsError(control, formControls, controlName);\r\n  }\r\n\r\n  onClickButton = (e) => {\r\n    return this.validateForm(e);\r\n  }\r\n\r\n  renderInputs = () => {\r\n    return Object.keys(this.state.formControls).map((controlName, index) => {\r\n      const control = this.state.formControls[controlName];\r\n      return (\r\n        <TextField\r\n          key={controlName + index}\r\n          type={control.type}\r\n          id={control.id}\r\n          value={control.value}\r\n          label={control.label}\r\n          name={control.name}\r\n          margin={control.margin}\r\n          variant={control.variant}\r\n          autoComplete={control.autoComplete}\r\n          helperText={control.helperText}\r\n          error={control.error}\r\n          onChange={e => this.onChangeHandler(e, controlName)}\r\n        />\r\n      )\r\n    });\r\n  }\r\n\r\n  stringifyFormData = (sentData) => {\r\n    const data = {};\r\n    for (let key of sentData.keys()) {\r\n      data[key] = sentData.get(key);\r\n    }\r\n    return JSON.stringify(data);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    const data = new FormData(event.target);\r\n    event.preventDefault();\r\n    event.target.reset();\r\n    this.setState({\r\n      data: this.stringifyFormData(data)\r\n    });\r\n    console.log('Email: ' + this.state.formControls['email'].value + ' Password: ' + this.state.formControls['password'].value);\r\n  }\r\n\r\n  handleFormReset = (e) => {\r\n    this.setState(() => this.initialState);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <AuthForm\r\n          formState={this.state}\r\n          handleSubmit={this.handleSubmit}\r\n          handleFormReset={this.handleFormReset}\r\n          onClickButton={this.onClickButton}\r\n          renderInputs={this.renderInputs}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  };\r\n};","import { createStore, combineReducers } from 'redux';\r\nimport { reducer as reduxFormReducer } from 'redux-form'\r\nimport reducerRedux from './reducers/reducer';\r\n\r\nconst reducer = combineReducers({\r\n    form: reduxFormReducer,\r\n    loginRedux: reducerRedux\r\n})\r\n\r\nexport default createStore(reducer);","import initialState from '../initialStateForm';\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_INPUTS_ERROR':\r\n            action.control.error = !action.validateControl(action.control.value, action.control.validation);\r\n            if (action.control.error && action.control.type === 'email') {\r\n                action.control.helperText = 'Invalid email adress.';\r\n            } else if (action.control.error && action.control.type === 'password') {\r\n                action.control.helperText = 'Min. pass length 6 characters.';\r\n            }\r\n            else {\r\n                action.control.helperText = '';\r\n            }\r\n            action.formControls[action.controlName] = action.control;\r\n            return { ...state, formControls: action.formControls };\r\n        case 'SET_DATA':\r\n            return { ...state, data: action.data }\r\n        default:\r\n    }\r\n    return state;\r\n};","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport { FormStyle, ButtonStyle } from '../Counter/style';\r\nimport PropTypes from 'prop-types'\r\nimport store from '../../store';\r\n\r\nconst AuthFormRedux = props => {\r\n  return (\r\n    <React.Fragment>\r\n      <form style={FormStyle} onSubmit={(e) => props.handleSubmit(e)}>\r\n          {\r\n            props.renderInputs()\r\n          }\r\n          <Link to={{ pathname: '/login-redux/success', state: { store: store.getState().loginRedux}}} style={{ textDecoration: 'none' }}>\r\n            <Button type='submit' style={ButtonStyle} onClick={(e) => props.onClickButton(e)} > Send </Button>\r\n          </Link>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nAuthFormRedux.propTypes = {\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  onClickButton: PropTypes.func.isRequired,\r\n  renderInputs: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AuthFormRedux;","import React from 'react';\r\nimport validateEmail from '../../validEmail';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AuthFormRedux from '../../views/Authentication/AuthFormRedux'\r\nimport store from '../../store';\r\n\r\nclass LoginRedux extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.validateControl = this.validateControl.bind(this);\r\n    this.validateForm = this.validateForm.bind(this);\r\n    this.onClickButton = this.onClickButton.bind(this);\r\n    this.renderInputs = this.renderInputs.bind(this);\r\n  }\r\n\r\n  validateControl = (value, validation) => {\r\n    let isValid = true;\r\n\r\n    if (!validation) {\r\n      return true;\r\n    }\r\n\r\n    if (validation.required) {\r\n      isValid = value.trim() !== '' && isValid;\r\n    }\r\n\r\n    if (validation.email) {\r\n      isValid = validateEmail(value) && isValid;\r\n    }\r\n\r\n    if (validation.minLength) {\r\n      isValid = value.length >= validation.minLength && isValid;\r\n    }\r\n\r\n    return isValid;\r\n  }\r\n\r\n  validateForm = (e) => {\r\n    let isValidForm = true;\r\n    const formControls = { ...store.getState().loginRedux.formControls };\r\n\r\n    Object.keys(store.getState().loginRedux.formControls).forEach((controlName) => {\r\n      let control = { ...store.getState().loginRedux.formControls[controlName] };\r\n      store.dispatch({ type: 'SET_INPUTS_ERROR', control: control, formControls: formControls, controlName: controlName, validateControl: this.validateControl });\r\n      isValidForm &= !control.error;\r\n    });\r\n\r\n    if (!isValidForm)\r\n      e.preventDefault();\r\n\r\n    return isValidForm;\r\n  }\r\n\r\n  onChangeHandler = (e, controlName) => {\r\n    const formControls = { ...store.getState().loginRedux.formControls };\r\n    const control = { ...formControls[controlName] };\r\n    control.value = e.target.value;\r\n    store.dispatch({ type: 'SET_INPUTS_ERROR', control: control, formControls: formControls, controlName: controlName, validateControl: this.validateControl });\r\n  }\r\n\r\n  onClickButton = (e) => {\r\n    return this.validateForm(e);\r\n  }\r\n\r\n  renderInputs = () => {\r\n    return Object.keys(store.getState().loginRedux.formControls).map((controlName, index) => {\r\n      const control = store.getState().loginRedux.formControls[controlName];\r\n      return (\r\n        <TextField\r\n          key={controlName + index}\r\n          type={control.type}\r\n          id={control.id}\r\n          value={control.value}\r\n          label={control.label}\r\n          name={control.name}\r\n          margin={control.margin}\r\n          variant={control.variant}\r\n          autoComplete={control.autoComplete}\r\n          helperText={control.helperText}\r\n          error={control.error}\r\n          onChange={e => this.onChangeHandler(e, controlName)}\r\n        />\r\n      )\r\n    });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    store.dispatch({ type: 'SET_DATA', data: { email: store.getState().loginRedux.formControls['email'].value, password: store.getState().loginRedux.formControls['password'].value } });\r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <AuthFormRedux\r\n          formState={store.getState().loginRedux}\r\n          handleSubmit={this.handleSubmit}\r\n          handleFormReset={this.handleFormReset}\r\n          onClickButton={this.onClickButton}\r\n          renderInputs={this.renderInputs}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  };\r\n};\r\n\r\nexport default LoginRedux;","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { Field, reduxForm, formValueSelector } from 'redux-form'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport validateEmail from '../../validEmail';\r\nimport { FormStyleRedux, ButtonStyle, TextStyle } from '../../views/Counter/style';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst validate = values => {\r\n  const errors = {}\r\n  const requiredFields = [\r\n    'email',\r\n    'password'\r\n  ]\r\n  requiredFields.forEach(field => {\r\n    if (!values[field]) {\r\n      errors[field] = 'Required'\r\n    }\r\n  })\r\n  if (!validateEmail(values.email)) {\r\n    errors.email = 'Invalid email address'\r\n  }\r\n  if (values.password != null && !(values.password.length >= 6)) {\r\n\r\n    errors.password = 'Too short'\r\n  }\r\n  return errors\r\n}\r\n\r\nconst renderTextField = ({\r\n  label,\r\n  input,\r\n  meta: { touched, invalid, error },\r\n  ...custom\r\n}) => (\r\n    <TextField\r\n      label={label}\r\n      placeholder={label}\r\n      error={touched && invalid}\r\n      helperText={touched && error}\r\n      {...input}\r\n      {...custom}\r\n    />\r\n  )\r\n\r\nlet LoginReduxForm = props => {\r\n  const { handleSubmit, pristine, submitting, emailValue, passwordValue, invalid } = props;\r\n  return (\r\n    <React.Fragment>\r\n      <form style={FormStyleRedux} onSubmit={handleSubmit}>\r\n        <Field name=\"email\" variant='outlined' component={renderTextField} label=\"Email\" />\r\n        <Field name=\"password\" type=\"password\" variant='outlined' component={renderTextField} label=\"Password\" />\r\n        <Link to={{\r\n          pathname: '/login-redux-form/success', state: {\r\n            store: {\r\n              email:\r\n                emailValue, password: passwordValue\r\n            }\r\n          }\r\n        }} style={{ textDecoration: 'none' }}>\r\n          <button type=\"submit\" style={ButtonStyle} disabled={invalid || submitting || pristine}  >\r\n            SEND\r\n        </button>\r\n        </Link>\r\n      </form>\r\n      <div style={TextStyle}>\r\n        <Typography variant=\"h5\">\r\n          Email: {emailValue}\r\n        </Typography>\r\n        <Typography variant=\"h5\">\r\n          Password: {passwordValue}\r\n        </Typography>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nLoginReduxForm = reduxForm({\r\n  form: 'loginReduxForm', // a unique identifier for this form\r\n  validate,\r\n})(LoginReduxForm);\r\n\r\n// Decorate with connect to read form values\r\nconst selector = formValueSelector('loginReduxForm') // <-- same as form name\r\nLoginReduxForm = connect(state => {\r\n  // can select values individually\r\n  const emailValue = selector(state, 'email')\r\n  const passwordValue = selector(state, 'password')\r\n  return {\r\n    emailValue,\r\n    passwordValue\r\n  }\r\n})(LoginReduxForm)\r\n\r\nexport default LoginReduxForm;","import React from 'react'\r\nimport LoginReduxForm from './LoginReduxForm';\r\n\r\nconst LRF = () => {\r\n    return (\r\n        <LoginReduxForm/>\r\n    )\r\n};\r\n\r\nexport default LRF;","import React from 'react';\r\nimport { TextStyle } from '../Counter/style'\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst NotFound = () => (\r\n    <div style={TextStyle}>\r\n       <Typography variant=\"h1\" component=\"h2\" gutterBottom>\r\n       OOPS, ERROR 404\r\n      </Typography>\r\n    </div>\r\n );\r\n\r\n export default NotFound;","import React from 'react';\r\nimport { TextStyle } from '../Counter/style'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { styled } from '@material-ui/styles';\r\nimport { compose, spacing, palette } from '@material-ui/system';\r\n\r\nconst Box = styled('div')(\r\n   compose(\r\n      spacing,\r\n      palette,\r\n   ),\r\n);\r\n\r\nconst SuccessRedux = (props) => {\r\n   const { store } = props.location.state;\r\n   return (\r\n      <div style={TextStyle}>\r\n         <Box color=\"white\" bgcolor=\"gray\" p={1}>\r\n            <Typography variant=\"h3\">\r\n               Email: {store.formControls['email'].value}\r\n            </Typography>\r\n            <Typography variant=\"h3\">\r\n               Password: {store.formControls['password'].value}\r\n            </Typography>\r\n         </Box>\r\n      </div>\r\n   )\r\n};\r\n\r\nexport default SuccessRedux;","import React from 'react';\r\nimport { TextStyle } from '../Counter/style'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { styled } from '@material-ui/styles';\r\nimport { compose, spacing, palette } from '@material-ui/system';\r\n\r\nconst Box = styled('div')(\r\n   compose(\r\n      spacing,\r\n      palette,\r\n   ),\r\n);\r\n\r\nconst SuccessReduxForm = (props) => {\r\n   const { store } = props.location.state;\r\n   return (\r\n      <div style={TextStyle}>\r\n         <Box color=\"white\" bgcolor=\"gray\" p={1}>\r\n            <Typography variant=\"h3\">\r\n               Email: {store.email}\r\n            </Typography>\r\n            <Typography variant=\"h3\">\r\n               Password: {store.password}\r\n            </Typography>\r\n         </Box>\r\n      </div>\r\n   )\r\n};\r\n\r\nexport default SuccessReduxForm;","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport CounterParent from '../Counter/CounterParent';\r\nimport About from \"../../views/TabsRouter/About\";\r\nimport Login from \"../Authentication/Login\";\r\nimport LoginRedux from \"../Authentication/LoginRedux\";\r\nimport LRF from \"../Authentication/LRF\";\r\nimport NotFound from \"../../views/TabsRouter/NotFound\";\r\nimport SuccessRedux from \"../../views/TabsRouter/SuccessRedux\";\r\nimport SuccessReduxForm from \"../../views/TabsRouter/SuccessReduxForm\";\r\n\r\n\r\nconst Main = () => (\r\n    <main>\r\n        <Switch>\r\n            <Route exact path={process.env.PUBLIC_URL + '/'} />\r\n            <Route exact path={process.env.PUBLIC_URL + '/about'} component={About} />\r\n            <Route exact path={process.env.PUBLIC_URL + '/counters'} component={CounterParent} />\r\n            <Route exact path={process.env.PUBLIC_URL + '/login'} component={Login} />\r\n            <Route exact path={process.env.PUBLIC_URL + '/login-redux'} component={LoginRedux} />\r\n            <Route exact path={process.env.PUBLIC_URL + '/login-redux/success'} component={SuccessRedux} />\r\n            <Route exact path={process.env.PUBLIC_URL + '/login-redux-form'} component={LRF} />\r\n            <Route exact path={process.env.PUBLIC_URL + '/login-redux-form/success'} component={SuccessReduxForm} />\r\n            <Route exact path={process.env.PUBLIC_URL + '/404'} component={NotFound} />\r\n            <Redirect to={process.env.PUBLIC_URL + '/404'} />\r\n        </Switch>\r\n    </main>\r\n)\r\n\r\nexport default Main;","import React from 'react';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport { connect } from 'react-redux';\r\n\r\nconst App = () => (\r\n        <React.Fragment>\r\n            <Main />\r\n        </React.Fragment>\r\n)\r\n\r\nconst mapStateToProps = state => ({ data: state.loginRedux.data, formControls: state.loginRedux.formControls });\r\nexport default connect(mapStateToProps)(App);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './components/TabsRouter/App';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}