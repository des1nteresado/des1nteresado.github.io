{"version":3,"sources":["style.js","routes.js","components/Header.js","views/Counter/index.js","components/Counter/CounterContainer.js","components/Counter/CounterParent.js","views/About.js","validEmail.js","views/Authentication/AuthForm.js","initialStateForm.js","components/Authentication/Login.js","store.js","reducers/reducer.js","views/Authentication/AuthFormRedux.js","components/Authentication/LoginRedux.js","views/Authentication/AuthFormReduxForm.js","components/Authentication/LoginReduxForm.js","views/NotFound.js","views/Success/SuccessRedux.js","views/Success/SuccessReduxForm.js","components/Main.js","components/App.js","index.js"],"names":["ButtonStyle","backgroundColor","color","border","textTransform","borderRadius","width","height","fontSize","fontFamily","letterSpacing","cursor","GridStyle","justifyContent","marginRight","TextStyle","textAlign","marginTop","CounterContainerStyle","display","flexWrap","TabStyle","indicatorColor","FormStyle","alignItems","margin","FormDataStyle","FormStyleRedux","paddingTop","FormWrapperStyle","routes","Header","hidden","_React$useState","React","useState","window","location","pathname","urls","indexOf","_React$useState2","Object","slicedToArray","value","setValue","style","react_default","a","createElement","Paper","square","Tabs","centered","onChange","event","newValue","Tab","label","component","Link","to","process","Counter","props","counterState","count","Grid","container","spacing","item","Button","variant","onClick","handleIncrement","id","handleDecrement","handleReset","CounterContainer","views_Counter","initialState","CounterParent","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","randomInteger","min","max","rand","Math","random","round","newCounters","state","counters","map","counter","setState","handleAddCounter","concat","handleRemoveCounter","length","pop","handleResetCounter","bind","assertThisInitialized","console","log","nextProps","nextState","prevProps","prevState","document","querySelector","snapshot","scrollToComponent","offset","align","duration","_this2","Fragment","counterObj","Counter_CounterContainer","key","Component","About","validEmail","email","test","String","toLowerCase","AuthForm","formState","formControls","password","data","onSubmit","e","handleSubmit","onReset","handleFormReset","renderInputs","type","onClickButton","TextField","InputProps","readOnly","helperText","initialStateForm","name","autoComplete","error","validation","required","minLength","Login","setInputsError","control","controlName","validateControl","isValid","trim","validateEmail","validateForm","isValidForm","objectSpread","keys","forEach","preventDefault","onChangeHandler","target","index","stringifyFormData","sentData","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","get","err","return","JSON","stringify","FormData","reset","Authentication_AuthForm","reducer","combineReducers","form","reduxFormReducer","loginRedux","arguments","action","createStore","AuthFormRedux","react_router_dom","store","getState","textDecoration","LoginRedux","dispatch","Authentication_AuthFormRedux","AuthFormReduxForm","pristine","submitting","emailValue","passwordValue","invalid","renderTextField","Field","disabled","_ref","input","_ref$meta","meta","touched","custom","objectWithoutProperties","assign","placeholder","LoginReduxForm","Authentication_AuthFormReduxForm","reduxForm","validate","values","errors","field","selector","formValueSelector","connect","NotFound","Typography","gutterBottom","Success","multiline","rowsMax","Main","react_router","exact","path","SuccessRedux","SuccessReduxForm","components_Header","components_Main","ReactDOM","render","es","basename","components_App","getElementById"],"mappings":"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","file":"static/js/main.ef85fcc0.chunk.js","sourcesContent":["const ButtonStyle = {\r\n    backgroundColor: \"#b71c1c\",\r\n    color: \"#fff\",\r\n    border: 'none',\r\n    textTransform: 'uppercase',\r\n    borderRadius: '5px',\r\n    width: '64px',\r\n    height: '36px',\r\n    fontSize: '14px',\r\n    fontFamily: 'Arial',\r\n    letterSpacing: 0.5,\r\n    cursor: 'Pointer'\r\n};\r\n\r\nconst GridStyle = {\r\n    justifyContent: \"center\",\r\n    marginRight: \"80px\"\r\n};\r\n\r\nconst TextStyle = {\r\n    textAlign: \"center\",\r\n    fontSize: 22,\r\n    marginTop: \"30px\",\r\n    fontFamily: 'Arial'\r\n}\r\n\r\nconst CounterContainerStyle = {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center'\r\n};\r\n\r\nconst TabStyle = {\r\n    indicatorColor: 'secondary',\r\n}\r\n\r\nconst FormStyle = {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: '250px',\r\n    margin: 'auto',\r\n    height: '200px',\r\n    marginTop: '25px'\r\n}\r\n\r\nconst FormDataStyle = {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: '500px',\r\n    margin: 'auto'\r\n}\r\n\r\nconst FormStyleRedux = {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: '250px',\r\n    margin: 'auto',\r\n    height: '230px',\r\n    paddingTop: '7px'\r\n}\r\n\r\nconst FormWrapperStyle = {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: '250px'\r\n}\r\n\r\nconst FormButStyle = {\r\n    backgroundColor: \"#b71c1c\",\r\n    color: '#fff',\r\n    marginTop: '10px'\r\n}\r\n\r\nconst MainFormStyle = {\r\n    display: 'flex',\r\n    justifyContent: 'space-between'\r\n}\r\n\r\nexport { ButtonStyle, TextStyle, GridStyle, MainFormStyle, FormDataStyle,  CounterContainerStyle, TabStyle, FormStyle, FormWrapperStyle, FormButStyle, FormStyleRedux };\r\n","export default [\r\n    '/about',\r\n    '/counters',\r\n    '/login',\r\n    '/login-redux',\r\n    '/login-redux-form',\r\n    '/'\r\n];","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Paper, Tabs, Tab } from '@material-ui/core';\r\nimport { TabStyle } from '../style';\r\nimport urls from '../routes';\r\n\r\nconst Header = () => {\r\n    let hidden = false;\r\n    const [value, setValue] = React.useState(() => {\r\n        if (window.location.pathname === '/404' || urls.indexOf(window.location.pathname) === -1) {\r\n            hidden = true;\r\n            return false;\r\n        }\r\n        return urls.indexOf(window.location.pathname) === 5 ? false : urls.indexOf(window.location.pathname);\r\n    });\r\n\r\n    function handleChange(event, newValue) {\r\n        setValue(newValue);\r\n    }\r\n\r\n    const style = hidden === true ? { display: 'none' } : {};\r\n\r\n    return (\r\n        <div style={style}>\r\n            <Paper square>\r\n                <Tabs value={value} centered style={TabStyle} onChange={handleChange}>\r\n                    <Tab label=\"about us\" component={Link} to={process.env.PUBLIC_URL + \"/about\"} />\r\n                    <Tab label=\"counters\" component={Link} to={process.env.PUBLIC_URL + \"/counters\"} />\r\n                    <Tab label=\"sign in\" component={Link} to={process.env.PUBLIC_URL + \"/login\"} />\r\n                    <Tab label=\"sign in with redux\" component={Link} to={process.env.PUBLIC_URL + \"/login-redux\"} />\r\n                    <Tab label=\"sign in with redux-form\" component={Link} to={process.env.PUBLIC_URL + \"/login-redux-form\"} />\r\n                </Tabs>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PropTypes from 'prop-types';\r\nimport { ButtonStyle, TextStyle, GridStyle } from '../../style';\r\n\r\nconst Counter = props => {\r\n    return (\r\n        <div>\r\n            <p style={TextStyle}>{props.counterState.count}</p>\r\n            <Grid container style={GridStyle} spacing={5}>\r\n                <Grid item>\r\n                    <Button style={ButtonStyle} variant=\"contained\" color=\"primary\" onClick={() => props.handleIncrement(props.counterState.id)}>+</Button>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Button style={ButtonStyle} variant=\"contained\" color=\"primary\" onClick={() => props.handleDecrement(props.counterState.id)}>-</Button>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Button style={ButtonStyle} variant=\"contained\" color=\"primary\" onClick={() => props.handleReset(props.counterState.id)}>reset</Button>\r\n                </Grid>\r\n            </Grid>\r\n        </div >\r\n    );\r\n}\r\n\r\nCounter.propTypes = {\r\n    count: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number\r\n    ]),\r\n    handleIncrement: PropTypes.func.isRequired,\r\n    handleDecrement: PropTypes.func.isRequired,\r\n    handleReset: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Counter;\r\n","import React from \"react\";\r\nimport Counter from \"../../views/Counter\";\r\n\r\nconst CounterContainer = props => {\r\n    return (\r\n        <Counter {...props} />\r\n    );\r\n}\r\n\r\nexport default CounterContainer;","import React from \"react\";\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport CounterContainer from \"./CounterContainer\";\r\nimport { CounterContainerStyle, TextStyle, GridStyle } from '../../style'\r\nimport scrollToComponent from 'react-scroll-to-component';\r\n\r\nconst initialState = [{ count: 0, id: 1 }]\r\n\r\nclass CounterParent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            counters: initialState\r\n        };\r\n\r\n        this.handleIncrement = this.handleIncrement.bind(this);\r\n        this.handleDecrement = this.handleDecrement.bind(this);\r\n        this.handleReset = this.handleReset.bind(this);\r\n\r\n        console.log(\"constructor:CounterParent\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"componentDidMount:CounterParent\");\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        console.log(\"shouldComponentUpdate:CounterParent\");\r\n        return (nextState.counters !== this.state.counters);\r\n    }\r\n\r\n    getSnapshotBeforeUpdate(prevProps, prevState) {\r\n        console.log(\"getSnapshotBeforeUpdate:CounterParent\")\r\n        if (prevState.counters.length > 30 && prevState.counters.length < this.state.counters.length) {\r\n            const element = document.querySelector(\"#counters:last-child\");\r\n            return element;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        console.log(\"componentDidUpdate:CounterParent\")\r\n        if (snapshot !== null) {\r\n            console.log(snapshot);\r\n            scrollToComponent(snapshot, {\r\n                offset: 1000,\r\n                align: 'bottom',\r\n                duration: 1500\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        console.log(\"componentWillUnmount:CounterParent\");\r\n    }\r\n\r\n    randomInteger = (min, max) => {\r\n        var rand = min - 0.5 + Math.random() * (max - min + 1)\r\n        rand = Math.round(rand);\r\n        return rand;\r\n    }\r\n\r\n    handleIncrement = (id) => {\r\n        let newCounters = this.state.counters.map((counter) => {\r\n            if (counter.id === id) {\r\n                return ({ count: counter.count + 1, id: counter.id })\r\n            }\r\n            return counter;\r\n        })\r\n        this.setState({\r\n            counters: newCounters\r\n        });\r\n    }\r\n\r\n    handleDecrement = (id) => {\r\n        let newCounters = this.state.counters.map((counter) => {\r\n            if (counter.id === id) {\r\n                return ({ count: counter.count - 1, id: counter.id })\r\n            }\r\n            return counter;\r\n        })\r\n        this.setState({\r\n            counters: newCounters\r\n        });\r\n    }\r\n\r\n    handleReset = (id) => {\r\n        let newCounters = this.state.counters.map((counter) => {\r\n            if (counter.id === id) {\r\n                return ({ count: 0, id: counter.id })\r\n            }\r\n            return counter;\r\n        })\r\n        this.setState({\r\n            counters: newCounters\r\n        });\r\n    }\r\n\r\n    handleAddCounter = () => {\r\n        let newCounters = this.state.counters.map((counter) => {\r\n            if (counter.count % 2 === 0 && counter.count !== 0) {\r\n                return ({ count: counter.count + 1, id: counter.id })\r\n            }\r\n            return counter;\r\n        })\r\n        newCounters = newCounters.concat([{ count: 0, id: this.randomInteger(0, 1000000) }]);\r\n        this.setState({\r\n            counters: newCounters\r\n        });\r\n    }\r\n\r\n    handleRemoveCounter = () => {\r\n        let newCounters = this.state.counters;\r\n        if (newCounters.length > 1) {\r\n            newCounters = newCounters.map((counter) => {\r\n                if (counter.count % 2 !== 0 && counter.count !== 0) {\r\n                    return ({ count: counter.count - 1, id: counter.id })\r\n                }\r\n                return counter;\r\n            })\r\n            newCounters.pop();\r\n        }\r\n        this.setState({\r\n            counters: newCounters\r\n        });\r\n    };\r\n\r\n    handleResetCounter = () => {\r\n        this.setState({\r\n            counters: initialState\r\n        });\r\n    }\r\n\r\n    render() {\r\n        console.log(\"render:CounterParent\")\r\n        return (\r\n            <React.Fragment>\r\n                <p style={TextStyle}>{this.state.counters.length}</p>\r\n                <Grid container style={GridStyle} spacing={5}>\r\n                    <Grid item>\r\n                        <Button onClick={() => this.handleAddCounter()}>add counter</Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button onClick={() => this.handleRemoveCounter()}>remove counter</Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button onClick={() => this.handleResetCounter()}>reset counter</Button>\r\n                    </Grid>\r\n                </Grid>\r\n                <div id=\"counters\" style={CounterContainerStyle}>\r\n                    {\r\n                        this.state.counters.map((counterObj) =>\r\n                            <CounterContainer\r\n                                handleReset={this.handleReset}\r\n                                handleIncrement={this.handleIncrement}\r\n                                handleDecrement={this.handleDecrement}\r\n                                key={counterObj.id}\r\n                                counterState={counterObj}\r\n                            />\r\n                        )\r\n                    }\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CounterParent;","import React from 'react';\r\nimport { TextStyle } from '../style'\r\n\r\nconst About = () => (\r\n    <div style={TextStyle}>\r\n      <h1>About company!</h1>\r\n    </div>\r\n  )\r\n\r\nexport default About;","export default (email) => {\r\n  let validStructure = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@(([[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return validStructure.test(String(email).toLowerCase());\r\n};","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { FormStyle, FormWrapperStyle, ButtonStyle, FormDataStyle } from '../../style';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst AuthForm = props => {\r\n  const email = props.formState.formControls['email'].value ? props.formState.formControls['email'].value : ' ';\r\n  const password = props.formState.formControls['password'].value ? props.formState.formControls['password'].value : ' ';\r\n  const data = props.formState.data ? props.formState.data : ' ';\r\n  return (\r\n    <React.Fragment>\r\n      <form style={FormStyle} onSubmit={(e) => props.handleSubmit(e)} onReset={props.handleFormReset}>\r\n        <div style={FormWrapperStyle}>\r\n          {\r\n            props.renderInputs()\r\n          }\r\n          <Button type='submit' style={ButtonStyle} onClick={(e) => props.onClickButton(e)} > Send </Button>\r\n        </div>\r\n      </form>\r\n      <div style={FormStyle}>\r\n        <TextField\r\n          id=\"outlined-email\"\r\n          label=\"Email\"\r\n          value={email}\r\n          margin=\"normal\"\r\n          InputProps={{\r\n            readOnly: true\r\n          }}\r\n          helperText=\"Real time email\"\r\n          variant=\"outlined\"\r\n        />\r\n        <TextField\r\n          id=\"outlined-password\"\r\n          label=\"Password\"\r\n          value={password}\r\n          margin=\"normal\"\r\n          InputProps={{\r\n            readOnly: true\r\n          }}\r\n          helperText=\"Real time password\"\r\n          variant=\"outlined\"\r\n        />\r\n      </div>\r\n      <div style={FormDataStyle}>\r\n        <TextField\r\n          id=\"outlined-data\"\r\n          label=\"Data to be sent\"\r\n          style={{ width: 450 }}\r\n          value={data}\r\n          margin=\"normal\"\r\n          InputProps={{\r\n            readOnly: true\r\n          }}\r\n          variant=\"outlined\"\r\n        />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nAuthForm.propTypes = {\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  handleFormReset: PropTypes.func.isRequired,\r\n  onClickButton: PropTypes.func.isRequired,\r\n  renderInputs: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AuthForm;","export default  {\r\n    data: null,\r\n    formControls: {\r\n        email: {\r\n            id: 'outlined-email-input',\r\n            value: '',\r\n            type: 'email',\r\n            label: 'Email',\r\n            name: 'email',\r\n            margin: 'normal',\r\n            variant: 'outlined',\r\n            autoComplete: 'email',\r\n            helperText: '',\r\n            error: false,\r\n            validation: {\r\n                required: true,\r\n                email: true\r\n            }\r\n        },\r\n        password: {\r\n            id: 'outlined-password-input',\r\n            value: '',\r\n            type: 'password',\r\n            label: 'Password',\r\n            name: 'password',\r\n            margin: 'normal',\r\n            variant: 'outlined',\r\n            autoComplete: \"current-password\",\r\n            helperText: '',\r\n            error: false,\r\n            validation: {\r\n                required: true,\r\n                minLength: 6\r\n            }\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport validateEmail from '../../validEmail';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AuthForm from '../../views/Authentication/AuthForm';\r\nimport initialState from '../../initialStateForm';\r\n\r\nexport default class Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = initialState;\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleFormReset = this.handleFormReset.bind(this);\r\n    this.setInputsError = this.setInputsError.bind(this);\r\n    this.validateControl = this.validateControl.bind(this);\r\n    this.validateForm = this.validateForm.bind(this);\r\n    this.onClickButton = this.onClickButton.bind(this);\r\n    this.renderInputs = this.renderInputs.bind(this);\r\n    this.stringifyFormData = this.stringifyFormData.bind(this);\r\n  }\r\n\r\n  setInputsError = (control, formControls, controlName) => {\r\n    control.error = !this.validateControl(control.value, control.validation);\r\n    if (control.error && control.type === 'email') {\r\n      control.helperText = 'Invalid email adress.';\r\n    } else if (control.error && control.type === 'password') {\r\n      control.helperText = 'Min. pass length 6 characters.';\r\n    }\r\n    else {\r\n      control.helperText = '';\r\n    }\r\n    formControls[controlName] = control;\r\n    this.setState({\r\n      formControls\r\n    });\r\n  }\r\n\r\n  validateControl = (value, validation) => {\r\n    let isValid = true;\r\n\r\n    if (!validation) {\r\n      return true;\r\n    }\r\n\r\n    if (validation.required) {\r\n      isValid = value.trim() !== '' && isValid;\r\n    }\r\n\r\n    if (validation.email) {\r\n      isValid = validateEmail(value) && isValid;\r\n    }\r\n\r\n    if (validation.minLength) {\r\n      isValid = value.length >= validation.minLength && isValid;\r\n    }\r\n\r\n    return isValid;\r\n  }\r\n\r\n  validateForm = (e) => {\r\n    let isValidForm = true;\r\n    const formControls = { ...this.state.formControls };\r\n\r\n    Object.keys(this.state.formControls).forEach((controlName) => {\r\n      let control = { ...this.state.formControls[controlName] };\r\n      this.setInputsError(control, formControls, controlName);\r\n      isValidForm &= !control.error;\r\n    });\r\n\r\n    if (!isValidForm)\r\n      e.preventDefault();\r\n\r\n    return isValidForm;\r\n  }\r\n\r\n  onChangeHandler = (e, controlName) => {\r\n    const formControls = { ...this.state.formControls };\r\n    const control = { ...formControls[controlName] };\r\n    control.value = e.target.value;\r\n    this.setInputsError(control, formControls, controlName);\r\n  }\r\n\r\n  onClickButton = (e) => {\r\n    return this.validateForm(e);\r\n  }\r\n\r\n  renderInputs = () => {\r\n    return Object.keys(this.state.formControls).map((controlName, index) => {\r\n      const control = this.state.formControls[controlName];\r\n      return (\r\n        <TextField\r\n          key={controlName + index}\r\n          type={control.type}\r\n          id={control.id}\r\n          value={control.value}\r\n          label={control.label}\r\n          name={control.name}\r\n          margin={control.margin}\r\n          variant={control.variant}\r\n          autoComplete={control.autoComplete}\r\n          helperText={control.helperText}\r\n          error={control.error}\r\n          onChange={e => this.onChangeHandler(e, controlName)}\r\n        />\r\n      )\r\n    });\r\n  }\r\n\r\n  stringifyFormData = (sentData) => {\r\n    const data = {};\r\n    for (let key of sentData.keys()) {\r\n      data[key] = sentData.get(key);\r\n    }\r\n    return JSON.stringify(data);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    const data = new FormData(event.target);\r\n    event.preventDefault();\r\n    event.target.reset();\r\n    this.setState({\r\n      data: this.stringifyFormData(data)\r\n    });\r\n    console.log('Email: ' + this.state.formControls['email'].value + ' Password: ' + this.state.formControls['password'].value);\r\n  }\r\n\r\n  handleFormReset = (e) => {\r\n    this.setState(() => initialState);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <AuthForm\r\n          formState={this.state}\r\n          handleSubmit={this.handleSubmit}\r\n          handleFormReset={this.handleFormReset}\r\n          onClickButton={this.onClickButton}\r\n          renderInputs={this.renderInputs}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  };\r\n};","import { createStore, combineReducers } from 'redux';\r\nimport { reducer as reduxFormReducer } from 'redux-form'\r\nimport reducerRedux from './reducers/reducer';\r\n\r\nconst reducer = combineReducers({\r\n    form: reduxFormReducer,\r\n    loginRedux: reducerRedux\r\n})\r\n\r\nexport default createStore(reducer);","import initialState from '../initialStateForm';\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_INPUTS_ERROR':\r\n            action.control.error = !action.validateControl(action.control.value, action.control.validation);\r\n            if (action.control.error && action.control.type === 'email') {\r\n                action.control.helperText = 'Invalid email adress.';\r\n            } else if (action.control.error && action.control.type === 'password') {\r\n                action.control.helperText = 'Min. pass length 6 characters.';\r\n            }\r\n            else {\r\n                action.control.helperText = '';\r\n            }\r\n            action.formControls[action.controlName] = action.control;\r\n            return { ...state, formControls: action.formControls };\r\n        case 'SET_DATA':\r\n            return { ...state, data: action.data }\r\n        default:\r\n    }\r\n    return state;\r\n};","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport { FormStyle, FormWrapperStyle, ButtonStyle } from '../../style';\r\nimport PropTypes from 'prop-types'\r\nimport store from '../../store';\r\n\r\nconst AuthFormRedux = props => {\r\n  return (\r\n    <React.Fragment>\r\n      <form style={FormStyle} onSubmit={(e) => props.handleSubmit(e)}>\r\n        <div style={FormWrapperStyle}>\r\n          {\r\n            props.renderInputs()\r\n          }\r\n          <Link to={{ pathname: `${process.env.PUBLIC_URL}/login-redux/success`, state: { store: store.getState()}}} style={{ textDecoration: 'none' }}>\r\n            <Button type='submit' style={ButtonStyle} onClick={(e) => props.onClickButton(e)} > Send </Button>\r\n          </Link>\r\n        </div>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nAuthFormRedux.propTypes = {\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  onClickButton: PropTypes.func.isRequired,\r\n  renderInputs: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AuthFormRedux;","import React from 'react';\r\nimport validateEmail from '../../validEmail';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AuthFormRedux from '../../views/Authentication/AuthFormRedux'\r\nimport store from '../../store';\r\n\r\nclass LoginRedux extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.validateControl = this.validateControl.bind(this);\r\n    this.validateForm = this.validateForm.bind(this);\r\n    this.onClickButton = this.onClickButton.bind(this);\r\n    this.renderInputs = this.renderInputs.bind(this);\r\n  }\r\n\r\n  validateControl = (value, validation) => {\r\n    let isValid = true;\r\n\r\n    if (!validation) {\r\n      return true;\r\n    }\r\n\r\n    if (validation.required) {\r\n      isValid = value.trim() !== '' && isValid;\r\n    }\r\n\r\n    if (validation.email) {\r\n      isValid = validateEmail(value) && isValid;\r\n    }\r\n\r\n    if (validation.minLength) {\r\n      isValid = value.length >= validation.minLength && isValid;\r\n    }\r\n\r\n    return isValid;\r\n  }\r\n\r\n  validateForm = (e) => {\r\n    let isValidForm = true;\r\n    const formControls = { ...store.getState().loginRedux.formControls };\r\n\r\n    Object.keys(store.getState().loginRedux.formControls).forEach((controlName) => {\r\n      let control = { ...store.getState().loginRedux.formControls[controlName] };\r\n      store.dispatch({ type: 'SET_INPUTS_ERROR', control: control, formControls: formControls, controlName: controlName, validateControl: this.validateControl });\r\n      isValidForm &= !control.error;\r\n    });\r\n\r\n    if (!isValidForm)\r\n      e.preventDefault();\r\n\r\n    return isValidForm;\r\n  }\r\n\r\n  onChangeHandler = (e, controlName) => {\r\n    const formControls = { ...store.getState().loginRedux.formControls };\r\n    const control = { ...formControls[controlName] };\r\n    control.value = e.target.value;\r\n    store.dispatch({ type: 'SET_INPUTS_ERROR', control: control, formControls: formControls, controlName: controlName, validateControl: this.validateControl });\r\n  }\r\n\r\n  onClickButton = (e) => {\r\n    return this.validateForm(e);\r\n  }\r\n\r\n  renderInputs = () => {\r\n    return Object.keys(store.getState().loginRedux.formControls).map((controlName, index) => {\r\n      const control = store.getState().loginRedux.formControls[controlName];\r\n      return (\r\n        <TextField\r\n          key={controlName + index}\r\n          type={control.type}\r\n          id={control.id}\r\n          value={control.value}\r\n          label={control.label}\r\n          name={control.name}\r\n          margin={control.margin}\r\n          variant={control.variant}\r\n          autoComplete={control.autoComplete}\r\n          helperText={control.helperText}\r\n          error={control.error}\r\n          onChange={e => this.onChangeHandler(e, controlName)}\r\n        />\r\n      )\r\n    });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    store.dispatch({ type: 'SET_DATA', data: { email: store.getState().loginRedux.formControls['email'].value, password: store.getState().loginRedux.formControls['password'].value } });\r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <AuthFormRedux\r\n          formState={store.getState().loginRedux}\r\n          handleSubmit={this.handleSubmit}\r\n          handleFormReset={this.handleFormReset}\r\n          onClickButton={this.onClickButton}\r\n          renderInputs={this.renderInputs}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  };\r\n};\r\n\r\nexport default LoginRedux;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Field } from 'redux-form';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { FormStyleRedux, FormStyle, ButtonStyle } from '../../style';\r\n\r\nconst AuthFormReduxForm = props => {\r\n    const { handleSubmit, pristine, submitting, emailValue, passwordValue, invalid, renderTextField } = props;\r\n    return (\r\n        <React.Fragment>\r\n            <form style={FormStyleRedux} onSubmit={handleSubmit}>\r\n                <Field name=\"email\" variant='outlined' component={renderTextField} label=\"Email\" />\r\n                <Field name=\"password\" type=\"password\" variant='outlined' component={renderTextField} label=\"Password\" />\r\n                <Link to={{\r\n                    pathname: `${process.env.PUBLIC_URL}/login-redux-form/success`, state: {\r\n                        store: {\r\n                            email:\r\n                                emailValue, password: passwordValue\r\n                        }\r\n                    }\r\n                }} style={{ textDecoration: 'none' }}>\r\n                    <button type=\"submit\" style={ButtonStyle} disabled={invalid || submitting || pristine}  >\r\n                        SEND\r\n      </button>\r\n                </Link>\r\n            </form>\r\n            <div style={FormStyle}>\r\n                <TextField\r\n                    id=\"outlined-email\"\r\n                    label=\"Email\"\r\n                    value={emailValue}\r\n                    margin=\"normal\"\r\n                    InputProps={{\r\n                        readOnly: true\r\n                    }}\r\n                    helperText=\"Real time email\"\r\n                    variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                    id=\"outlined-password\"\r\n                    label=\"Password\"\r\n                    value={passwordValue}\r\n                    margin=\"normal\"\r\n                    InputProps={{\r\n                        readOnly: true\r\n                    }}\r\n                    helperText=\"Real time password\"\r\n                    variant=\"outlined\"\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nAuthFormReduxForm.propTypes = {\r\n    handleSubmit: PropTypes.func.isRequired,\r\n    renderInputs: PropTypes.func.isRequired,\r\n    renderTextField: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AuthFormReduxForm;","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { reduxForm, formValueSelector } from 'redux-form'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport validateEmail from '../../validEmail';\r\nimport AuthFormReduxForm from '../../views/Authentication/AuthFormReduxForm';\r\n\r\n\r\nconst validate = values => {\r\n  const errors = {}\r\n  const requiredFields = [\r\n    'email',\r\n    'password'\r\n  ]\r\n  requiredFields.forEach(field => {\r\n    if (!values[field]) {\r\n      errors[field] = 'Required'\r\n    }\r\n  })\r\n  if (!validateEmail(values.email)) {\r\n    errors.email = 'Invalid email address'\r\n  }\r\n  if (values.password && !(values.password.length >= 6)) {\r\n\r\n    errors.password = 'Too short'\r\n  }\r\n  return errors\r\n}\r\n\r\nconst renderTextField = ({\r\n  label,\r\n  input,\r\n  meta: { touched, invalid, error },\r\n  ...custom\r\n}) => (\r\n    <TextField\r\n      label={label}\r\n      placeholder={label}\r\n      error={touched && invalid}\r\n      helperText={touched && error}\r\n      {...input}\r\n      {...custom}\r\n    />\r\n  )\r\n\r\nlet LoginReduxForm = props => {\r\n  const { handleSubmit, pristine, submitting, emailValue, passwordValue, invalid } = props;\r\n  return (\r\n    <AuthFormReduxForm\r\n      renderTextField={renderTextField}\r\n      handleSubmit={handleSubmit}\r\n      emailValue={emailValue}\r\n      passwordValue={passwordValue}\r\n      pristine={pristine}\r\n      submitting={submitting}\r\n      invalid={invalid}\r\n    />\r\n  )\r\n}\r\n\r\nLoginReduxForm = reduxForm({\r\n  form: 'loginReduxForm',\r\n  validate,\r\n})(LoginReduxForm);\r\n\r\nconst selector = formValueSelector('loginReduxForm')\r\nLoginReduxForm = connect(state => {\r\n  const emailValue = selector(state, 'email')\r\n  const passwordValue = selector(state, 'password')\r\n  return {\r\n    emailValue,\r\n    passwordValue\r\n  }\r\n})(LoginReduxForm)\r\n\r\nexport default LoginReduxForm;","import React from 'react';\r\nimport { TextStyle } from '../style'\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst NotFound = () => (\r\n    <div style={TextStyle}>\r\n       <Typography variant=\"h1\" component=\"h2\" gutterBottom>\r\n       OOPS, ERROR 404\r\n      </Typography>\r\n    </div>\r\n );\r\n\r\n export default NotFound;","import React from 'react';\r\nimport { TextStyle } from '../../style'\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst Success = (props) => {\r\n   const { store } = props.location.state ? props.location.state : 'undefined';\r\n   let value = 'nice try';\r\n   if (props.location.state) {\r\n      value = store.formControls['email'].value + '/' + store.formControls['password'].value;\r\n   }\r\n   return (\r\n      <div style={TextStyle}>\r\n         <TextField\r\n            id=\"outlined-multiline-flexible\"\r\n            label=\"Email/Password\"\r\n            multiline\r\n            rowsMax=\"6\"\r\n            style={{ width: 500 }}\r\n            value={value}\r\n            margin=\"normal\"\r\n            InputProps={{\r\n               readOnly: true\r\n            }}\r\n            helperText=\"Send from login-redux\"\r\n            variant=\"outlined\"\r\n         />\r\n      </div>\r\n   )\r\n};\r\n\r\nexport default Success;","import React from 'react';\r\nimport { TextStyle } from '../../style'\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst Success = (props) => {\r\n   const { store } = props.location.state ? props.location.state : 'undefined';\r\n   let value = 'nice try';\r\n   if (props.location.state) {\r\n      value = store.email + '/' + store.password;\r\n   }\r\n   return (\r\n      <div style={TextStyle}>\r\n         <TextField\r\n            id=\"outlined-multiline-flexible\"\r\n            label=\"Email/Password\"\r\n            multiline\r\n            rowsMax=\"6\"\r\n            style={{ width: 500 }}\r\n            value={value}\r\n            margin=\"normal\"\r\n            InputProps={{\r\n               readOnly: true\r\n            }}\r\n            helperText=\"Send from login-redux-form\"\r\n            variant=\"outlined\"\r\n         />\r\n      </div>\r\n   )\r\n};\r\n\r\nexport default Success;","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport CounterParent from './Counter/CounterParent';\r\nimport About from \"../views/About\";\r\nimport Login from \"./Authentication/Login\";\r\nimport LoginRedux from \"./Authentication/LoginRedux\";\r\nimport LoginReduxForm from \"./Authentication/LoginReduxForm\";\r\nimport NotFound from \"../views/NotFound\";\r\nimport SuccessRedux from \"../views/Success/SuccessRedux\";\r\nimport SuccessReduxForm from \"../views/Success/SuccessReduxForm\";\r\n\r\n\r\nconst Main = () => (\r\n    <main>\r\n        <Switch>\r\n            <Route exact path={process.env.PUBLIC_URL + '/'} />\r\n            <Route exact path={process.env.PUBLIC_URL + '/about'} component={About} />\r\n            <Route exact path={process.env.PUBLIC_URL + '/counters'} component={CounterParent} />\r\n            <Route exact path={process.env.PUBLIC_URL + '/login'} component={Login} />\r\n            <Route exact path={process.env.PUBLIC_URL + '/login-redux'} component={LoginRedux} />\r\n            <Route exact path={process.env.PUBLIC_URL + '/login-redux/success'} component={SuccessRedux} />\r\n            <Route exact path={process.env.PUBLIC_URL + '/login-redux-form'} component={LoginReduxForm} />\r\n            <Route exact path={process.env.PUBLIC_URL + '/login-redux-form/success'} component={SuccessReduxForm} />\r\n            <Route exact path={process.env.PUBLIC_URL + '/404'} component={NotFound} />\r\n            <Redirect to={process.env.PUBLIC_URL + '/404'} />\r\n        </Switch>\r\n    </main>\r\n)\r\n\r\nexport default Main;","import React from 'react';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport { connect } from 'react-redux';\r\n\r\nconst App = () => (\r\n        <React.Fragment>\r\n            <Header />\r\n            <Main />\r\n        </React.Fragment>\r\n)\r\n\r\nconst mapStateToProps = state => ({ data: state.loginRedux.data, formControls: state.loginRedux.formControls });\r\nexport default connect(mapStateToProps)(App);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './components/App';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}