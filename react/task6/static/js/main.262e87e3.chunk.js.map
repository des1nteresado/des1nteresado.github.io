{"version":3,"sources":["views/Counter/style.js","routes.js","components/TabsRouter/Header.js","views/Counter/index.js","components/Counter/CounterContainer.js","components/Counter/CounterParent.js","views/TabsRouter/About.js","validEmail.js","views/Authentication/AuthForm.js","initialStateForm.js","components/Authentication/Login.js","store.js","reducers/reducer.js","views/Authentication/AuthFormRedux.js","components/Authentication/LoginRedux.js","components/Authentication/LoginReduxForm.js","components/Authentication/LRF.js","views/TabsRouter/NotFound.js","views/TabsRouter/SuccessRedux.js","views/TabsRouter/SuccessReduxForm.js","components/TabsRouter/Main.js","components/TabsRouter/App.js","index.js"],"names":["ButtonStyle","backgroundColor","color","border","textTransform","borderRadius","width","height","fontSize","fontFamily","letterSpacing","cursor","GridStyle","justifyContent","marginRight","TextStyle","textAlign","marginTop","CounterContainerStyle","display","flexWrap","TabStyle","indicatorColor","FormStyle","alignItems","margin","FormStyleRedux","paddingTop","routes","Header","hidden","_React$useState","React","useState","window","location","pathname","urls","indexOf","_React$useState2","Object","slicedToArray","value","setValue","style","react_default","a","createElement","Paper","square","Tabs","centered","onChange","event","newValue","Tab","label","component","Link","to","Counter","props","counterState","count","Grid","container","spacing","item","Button","variant","onClick","handleIncrement","id","handleDecrement","handleReset","CounterContainer","views_Counter","initialState","CounterParent","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","randomInteger","min","max","rand","Math","random","round","newCounters","state","counters","map","counter","setState","handleAddCounter","concat","handleRemoveCounter","length","pop","handleResetCounter","bind","assertThisInitialized","console","log","nextProps","nextState","prevProps","prevState","document","querySelector","snapshot","scrollToComponent","offset","align","duration","_this2","Fragment","counterObj","Counter_CounterContainer","key","Component","About","validEmail","email","test","String","toLowerCase","AuthForm","onSubmit","e","handleSubmit","onReset","handleFormReset","renderInputs","type","onClickButton","Typography","formState","formControls","data","initialStateForm","name","autoComplete","helperText","error","validation","required","password","minLength","Login","setInputsError","control","controlName","validateControl","isValid","trim","validateEmail","validateForm","isValidForm","objectSpread","keys","forEach","preventDefault","onChangeHandler","target","index","TextField","stringifyFormData","sentData","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","get","err","return","JSON","stringify","FormData","reset","Authentication_AuthForm","reducer","combineReducers","form","reduxFormReducer","loginRedux","arguments","action","createStore","AuthFormRedux","react_router_dom","store","getState","textDecoration","LoginRedux","dispatch","Authentication_AuthFormRedux","renderTextField","_ref","input","_ref$meta","meta","touched","invalid","custom","objectWithoutProperties","assign","placeholder","LoginReduxForm","pristine","submitting","emailValue","passwordValue","Field","disabled","reduxForm","validate","values","errors","field","selector","formValueSelector","connect","LRF","Authentication_LoginReduxForm","NotFound","gutterBottom","Box","styled","compose","palette","SuccessRedux","bgcolor","p","SuccessReduxForm","SuccessReduxForm_Box","Main","react_router","exact","path","process","TabsRouter_Header","TabsRouter_Main","ReactDOM","render","es","basename","TabsRouter_App","getElementById"],"mappings":"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","file":"static/js/main.262e87e3.chunk.js","sourcesContent":["const ButtonStyle = {\r\n    backgroundColor: \"#b71c1c\",\r\n    color: \"#fff\",\r\n    border: 'none',\r\n    textTransform: 'uppercase',\r\n    borderRadius: '5px',\r\n    width: '64px',\r\n    height: '36px',\r\n    fontSize: '14px',\r\n    fontFamily: 'Arial',\r\n    letterSpacing: 0.5,\r\n    cursor: 'Pointer'\r\n};\r\n\r\nconst GridStyle = {\r\n    justifyContent: \"center\",\r\n    marginRight: \"80px\"\r\n};\r\n\r\nconst TextStyle = {\r\n    textAlign: \"center\",\r\n    fontSize: 22,\r\n    marginTop: \"30px\"\r\n}\r\n\r\nconst CounterContainerStyle = {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center'\r\n};\r\n\r\nconst TabStyle = {\r\n    indicatorColor: 'secondary',\r\n}\r\n\r\nconst FormStyle = {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: '250px',\r\n    margin: 'auto',\r\n    height: '200px'\r\n}\r\n\r\nconst FormStyleRedux = {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: '250px',\r\n    margin: 'auto',\r\n    height: '230px',\r\n    paddingTop: '7px'\r\n}\r\n\r\nconst FormWrapperStyle = {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: '250px'\r\n}\r\n\r\nconst FormButStyle = {\r\n    backgroundColor: \"#b71c1c\",\r\n    color: '#fff',\r\n    marginTop: '10px'\r\n}\r\n\r\nconst MainFormStyle = {\r\n    display: 'flex',\r\n    justifyContent: 'space-between'\r\n}\r\n\r\nexport { ButtonStyle, TextStyle, GridStyle, MainFormStyle,  CounterContainerStyle, TabStyle, FormStyle, FormWrapperStyle, FormButStyle, FormStyleRedux };\r\n","export default [\r\n    '/about',\r\n    '/counters',\r\n    '/login',\r\n    '/login-redux',\r\n    '/login-redux-form',\r\n    '/'\r\n];","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Paper, Tabs, Tab } from '@material-ui/core';\r\nimport { TabStyle } from '../../views/Counter/style';\r\nimport urls from '../../routes';\r\n\r\nconst Header = () => {\r\n    let hidden = false;\r\n    const [value, setValue] = React.useState(() => {\r\n        if (window.location.pathname === '/404' || urls.indexOf(window.location.pathname) === -1) {\r\n            hidden = true;\r\n            return false;\r\n        }\r\n        return urls.indexOf(window.location.pathname) === 5 ? false : urls.indexOf(window.location.pathname);\r\n    });\r\n\r\n    function handleChange(event, newValue) {\r\n        setValue(newValue);\r\n    }\r\n\r\n    const style = hidden === true ? { display: 'none' } : {};\r\n\r\n    return (\r\n        <div style={style}>\r\n            <Paper square>\r\n                <Tabs value={value} centered style={TabStyle} onChange={handleChange}>\r\n                    <Tab label=\"about us\" component={Link} to=\"/about\" />\r\n                    <Tab label=\"counters\" component={Link} to=\"/counters\" />\r\n                    <Tab label=\"sign in\" component={Link} to=\"/login\" />\r\n                    <Tab label=\"sign in with redux\" component={Link} to=\"/login-redux\" />\r\n                    <Tab label=\"sign in with redux-form\" component={Link} to=\"/login-redux-form\" />\r\n                </Tabs>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PropTypes from 'prop-types';\r\nimport { ButtonStyle, TextStyle, GridStyle } from './style';\r\n\r\nconst Counter = props => {\r\n    return (\r\n        <div>\r\n            <p style={TextStyle}>{props.counterState.count}</p>\r\n            <Grid container style={GridStyle} spacing={5}>\r\n                <Grid item>\r\n                    <Button style={ButtonStyle} variant=\"contained\" color=\"primary\" onClick={() => props.handleIncrement(props.counterState.id)}>+</Button>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Button style={ButtonStyle} variant=\"contained\" color=\"primary\" onClick={() => props.handleDecrement(props.counterState.id)}>-</Button>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Button style={ButtonStyle} variant=\"contained\" color=\"primary\" onClick={() => props.handleReset(props.counterState.id)}>reset</Button>\r\n                </Grid>\r\n            </Grid>\r\n        </div >\r\n    );\r\n}\r\n\r\nCounter.propTypes = {\r\n    count: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number\r\n    ]),\r\n    handleIncrement: PropTypes.func.isRequired,\r\n    handleDecrement: PropTypes.func.isRequired,\r\n    handleReset: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Counter;\r\n","import React from \"react\";\r\nimport Counter from \"../../views/Counter\";\r\n\r\nconst CounterContainer = props => {\r\n    return (\r\n        <Counter {...props} />\r\n    );\r\n}\r\n\r\nexport default CounterContainer;","import React from \"react\";\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport CounterContainer from \"./CounterContainer\";\r\nimport { CounterContainerStyle, TextStyle, GridStyle } from '../../views/Counter/style'\r\nimport scrollToComponent from 'react-scroll-to-component';\r\n\r\nconst initialState = [{ count: 0, id: 1 }]\r\n\r\nclass CounterParent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            counters: initialState\r\n        };\r\n\r\n        this.handleIncrement = this.handleIncrement.bind(this);\r\n        this.handleDecrement = this.handleDecrement.bind(this);\r\n        this.handleReset = this.handleReset.bind(this);\r\n\r\n        console.log(\"constructor:CounterParent\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"componentDidMount:CounterParent\");\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        console.log(\"shouldComponentUpdate:CounterParent\");\r\n        return (nextState.counters !== this.state.counters);\r\n    }\r\n\r\n    getSnapshotBeforeUpdate(prevProps, prevState) {\r\n        console.log(\"getSnapshotBeforeUpdate:CounterParent\")\r\n        if (prevState.counters.length > 30 && prevState.counters.length < this.state.counters.length) {\r\n            const element = document.querySelector(\"#counters:last-child\");\r\n            return element;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        console.log(\"componentDidUpdate:CounterParent\")\r\n        if (snapshot !== null) {\r\n            console.log(snapshot);\r\n            scrollToComponent(snapshot, {\r\n                offset: 1000,\r\n                align: 'bottom',\r\n                duration: 1500\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        console.log(\"componentWillUnmount:CounterParent\");\r\n    }\r\n\r\n    randomInteger = (min, max) => {\r\n        var rand = min - 0.5 + Math.random() * (max - min + 1)\r\n        rand = Math.round(rand);\r\n        return rand;\r\n    }\r\n\r\n    handleIncrement = (id) => {\r\n        let newCounters = this.state.counters.map((counter) => {\r\n            if (counter.id === id) {\r\n                return ({ count: counter.count + 1, id: counter.id })\r\n            }\r\n            return counter;\r\n        })\r\n        this.setState({\r\n            counters: newCounters\r\n        });\r\n    }\r\n\r\n    handleDecrement = (id) => {\r\n        let newCounters = this.state.counters.map((counter) => {\r\n            if (counter.id === id) {\r\n                return ({ count: counter.count - 1, id: counter.id })\r\n            }\r\n            return counter;\r\n        })\r\n        this.setState({\r\n            counters: newCounters\r\n        });\r\n    }\r\n\r\n    handleReset = (id) => {\r\n        let newCounters = this.state.counters.map((counter) => {\r\n            if (counter.id === id) {\r\n                return ({ count: 0, id: counter.id })\r\n            }\r\n            return counter;\r\n        })\r\n        this.setState({\r\n            counters: newCounters\r\n        });\r\n    }\r\n\r\n    handleAddCounter = () => {\r\n        let newCounters = this.state.counters.map((counter) => {\r\n            if (counter.count % 2 === 0 && counter.count !== 0) {\r\n                return ({ count: counter.count + 1, id: counter.id })\r\n            }\r\n            return counter;\r\n        })\r\n        newCounters = newCounters.concat([{ count: 0, id: this.randomInteger(0, 1000000) }]);\r\n        this.setState({\r\n            counters: newCounters\r\n        });\r\n    }\r\n\r\n    handleRemoveCounter = () => {\r\n        let newCounters = this.state.counters;\r\n        if (newCounters.length > 1) {\r\n            newCounters = newCounters.map((counter) => {\r\n                if (counter.count % 2 !== 0 && counter.count !== 0) {\r\n                    return ({ count: counter.count - 1, id: counter.id })\r\n                }\r\n                return counter;\r\n            })\r\n            newCounters.pop();\r\n        }\r\n        this.setState({\r\n            counters: newCounters\r\n        });\r\n    };\r\n\r\n    handleResetCounter = () => {\r\n        this.setState({\r\n            counters: initialState\r\n        });\r\n    }\r\n\r\n    render() {\r\n        console.log(\"render:CounterParent\")\r\n        return (\r\n            <React.Fragment>\r\n                <p style={TextStyle}>{this.state.counters.length}</p>\r\n                <Grid container style={GridStyle} spacing={5}>\r\n                    <Grid item>\r\n                        <Button onClick={() => this.handleAddCounter()}>add counter</Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button onClick={() => this.handleRemoveCounter()}>remove counter</Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button onClick={() => this.handleResetCounter()}>reset counter</Button>\r\n                    </Grid>\r\n                </Grid>\r\n                <div id=\"counters\" style={CounterContainerStyle}>\r\n                    {\r\n                        this.state.counters.map((counterObj) =>\r\n                            <CounterContainer\r\n                                handleReset={this.handleReset}\r\n                                handleIncrement={this.handleIncrement}\r\n                                handleDecrement={this.handleDecrement}\r\n                                key={counterObj.id}\r\n                                counterState={counterObj}\r\n                            />\r\n                        )\r\n                    }\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CounterParent;","import React from 'react';\r\nimport { TextStyle } from '../Counter/style'\r\n\r\nconst About = () => (\r\n    <div style={TextStyle}>\r\n      <h1>About company!</h1>\r\n    </div>\r\n  )\r\n\r\nexport default About;","export default (email) => {\r\n  let validStructure = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@(([[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return validStructure.test(String(email).toLowerCase());\r\n};","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { FormStyle, ButtonStyle, TextStyle } from '../../views/Counter/style';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AuthForm = props => {\r\n    return (\r\n        <React.Fragment>\r\n          <form style={FormStyle} onSubmit={(e) => props.handleSubmit(e)} onReset={props.handleFormReset}>\r\n              {\r\n                props.renderInputs()\r\n              }\r\n              <Button type='submit' style={ButtonStyle} onClick={(e) => props.onClickButton(e)} > Send </Button>\r\n          </form>\r\n          <div style={TextStyle}>\r\n            <Typography variant=\"h5\">\r\n              Email: {props.formState.formControls['email'].value}\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              Password: {props.formState.formControls['password'].value}\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              Data to be sent:\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              {props.formState.data}\r\n            </Typography>\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n}\r\n\r\nAuthForm.propTypes = {\r\n    handleSubmit: PropTypes.func.isRequired,\r\n    handleFormReset: PropTypes.func.isRequired,\r\n    onClickButton: PropTypes.func.isRequired,\r\n    renderInputs: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AuthForm;","export default  {\r\n    data: null,\r\n    formControls: {\r\n        email: {\r\n            id: 'outlined-email-input',\r\n            value: '',\r\n            type: 'email',\r\n            label: 'Email',\r\n            name: 'email',\r\n            margin: 'normal',\r\n            variant: 'outlined',\r\n            autoComplete: 'email',\r\n            helperText: '',\r\n            error: false,\r\n            validation: {\r\n                required: true,\r\n                email: true\r\n            }\r\n        },\r\n        password: {\r\n            id: 'outlined-password-input',\r\n            value: '',\r\n            type: 'password',\r\n            label: 'Password',\r\n            name: 'password',\r\n            margin: 'normal',\r\n            variant: 'outlined',\r\n            autoComplete: \"current-password\",\r\n            helperText: '',\r\n            error: false,\r\n            validation: {\r\n                required: true,\r\n                minLength: 6\r\n            }\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport validateEmail from '../../validEmail';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AuthForm from '../../views/Authentication/AuthForm';\r\nimport initialState from '../../initialStateForm';\r\n\r\nexport default class Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = initialState;\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleFormReset = this.handleFormReset.bind(this);\r\n    this.setInputsError = this.setInputsError.bind(this);\r\n    this.validateControl = this.validateControl.bind(this);\r\n    this.validateForm = this.validateForm.bind(this);\r\n    this.onClickButton = this.onClickButton.bind(this);\r\n    this.renderInputs = this.renderInputs.bind(this);\r\n    this.stringifyFormData = this.stringifyFormData.bind(this);\r\n  }\r\n\r\n  setInputsError = (control, formControls, controlName) => {\r\n    control.error = !this.validateControl(control.value, control.validation);\r\n    if (control.error && control.type === 'email') {\r\n      control.helperText = 'Invalid email adress.';\r\n    } else if (control.error && control.type === 'password') {\r\n      control.helperText = 'Min. pass length 6 characters.';\r\n    }\r\n    else {\r\n      control.helperText = '';\r\n    }\r\n    formControls[controlName] = control;\r\n    this.setState({\r\n      formControls\r\n    });\r\n  }\r\n\r\n  validateControl = (value, validation) => {\r\n    let isValid = true;\r\n\r\n    if (!validation) {\r\n      return true;\r\n    }\r\n\r\n    if (validation.required) {\r\n      isValid = value.trim() !== '' && isValid;\r\n    }\r\n\r\n    if (validation.email) {\r\n      isValid = validateEmail(value) && isValid;\r\n    }\r\n\r\n    if (validation.minLength) {\r\n      isValid = value.length >= validation.minLength && isValid;\r\n    }\r\n\r\n    return isValid;\r\n  }\r\n\r\n  validateForm = (e) => {\r\n    let isValidForm = true;\r\n    const formControls = { ...this.state.formControls };\r\n\r\n    Object.keys(this.state.formControls).forEach((controlName) => {\r\n      let control = { ...this.state.formControls[controlName] };\r\n      this.setInputsError(control, formControls, controlName);\r\n      isValidForm &= !control.error;\r\n    });\r\n\r\n    if (!isValidForm)\r\n      e.preventDefault();\r\n\r\n    return isValidForm;\r\n  }\r\n\r\n  onChangeHandler = (e, controlName) => {\r\n    const formControls = { ...this.state.formControls };\r\n    const control = { ...formControls[controlName] };\r\n    control.value = e.target.value;\r\n    this.setInputsError(control, formControls, controlName);\r\n  }\r\n\r\n  onClickButton = (e) => {\r\n    return this.validateForm(e);\r\n  }\r\n\r\n  renderInputs = () => {\r\n    return Object.keys(this.state.formControls).map((controlName, index) => {\r\n      const control = this.state.formControls[controlName];\r\n      return (\r\n        <TextField\r\n          key={controlName + index}\r\n          type={control.type}\r\n          id={control.id}\r\n          value={control.value}\r\n          label={control.label}\r\n          name={control.name}\r\n          margin={control.margin}\r\n          variant={control.variant}\r\n          autoComplete={control.autoComplete}\r\n          helperText={control.helperText}\r\n          error={control.error}\r\n          onChange={e => this.onChangeHandler(e, controlName)}\r\n        />\r\n      )\r\n    });\r\n  }\r\n\r\n  stringifyFormData = (sentData) => {\r\n    const data = {};\r\n    for (let key of sentData.keys()) {\r\n      data[key] = sentData.get(key);\r\n    }\r\n    return JSON.stringify(data);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    const data = new FormData(event.target);\r\n    event.preventDefault();\r\n    event.target.reset();\r\n    this.setState({\r\n      data: this.stringifyFormData(data)\r\n    });\r\n    console.log('Email: ' + this.state.formControls['email'].value + ' Password: ' + this.state.formControls['password'].value);\r\n  }\r\n\r\n  handleFormReset = (e) => {\r\n    this.setState(() => this.initialState);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <AuthForm\r\n          formState={this.state}\r\n          handleSubmit={this.handleSubmit}\r\n          handleFormReset={this.handleFormReset}\r\n          onClickButton={this.onClickButton}\r\n          renderInputs={this.renderInputs}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  };\r\n};","import { createStore, combineReducers } from 'redux';\r\nimport { reducer as reduxFormReducer } from 'redux-form'\r\nimport reducerRedux from './reducers/reducer';\r\n\r\nconst reducer = combineReducers({\r\n    form: reduxFormReducer,\r\n    loginRedux: reducerRedux\r\n})\r\n\r\nexport default createStore(reducer);","import initialState from '../initialStateForm';\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_INPUTS_ERROR':\r\n            action.control.error = !action.validateControl(action.control.value, action.control.validation);\r\n            if (action.control.error && action.control.type === 'email') {\r\n                action.control.helperText = 'Invalid email adress.';\r\n            } else if (action.control.error && action.control.type === 'password') {\r\n                action.control.helperText = 'Min. pass length 6 characters.';\r\n            }\r\n            else {\r\n                action.control.helperText = '';\r\n            }\r\n            action.formControls[action.controlName] = action.control;\r\n            return { ...state, formControls: action.formControls };\r\n        case 'SET_DATA':\r\n            return { ...state, data: action.data }\r\n        default:\r\n    }\r\n    return state;\r\n};","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport { FormStyle, ButtonStyle } from '../Counter/style';\r\nimport PropTypes from 'prop-types'\r\nimport store from '../../store';\r\n\r\nconst AuthFormRedux = props => {\r\n  return (\r\n    <React.Fragment>\r\n      <form style={FormStyle} onSubmit={(e) => props.handleSubmit(e)}>\r\n          {\r\n            props.renderInputs()\r\n          }\r\n          <Link to={{ pathname: '/login-redux/success', state: { store: store.getState().loginRedux}}} style={{ textDecoration: 'none' }}>\r\n            <Button type='submit' style={ButtonStyle} onClick={(e) => props.onClickButton(e)} > Send </Button>\r\n          </Link>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nAuthFormRedux.propTypes = {\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  onClickButton: PropTypes.func.isRequired,\r\n  renderInputs: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AuthFormRedux;","import React from 'react';\r\nimport validateEmail from '../../validEmail';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AuthFormRedux from '../../views/Authentication/AuthFormRedux'\r\nimport store from '../../store';\r\n\r\nclass LoginRedux extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.validateControl = this.validateControl.bind(this);\r\n    this.validateForm = this.validateForm.bind(this);\r\n    this.onClickButton = this.onClickButton.bind(this);\r\n    this.renderInputs = this.renderInputs.bind(this);\r\n  }\r\n\r\n  validateControl = (value, validation) => {\r\n    let isValid = true;\r\n\r\n    if (!validation) {\r\n      return true;\r\n    }\r\n\r\n    if (validation.required) {\r\n      isValid = value.trim() !== '' && isValid;\r\n    }\r\n\r\n    if (validation.email) {\r\n      isValid = validateEmail(value) && isValid;\r\n    }\r\n\r\n    if (validation.minLength) {\r\n      isValid = value.length >= validation.minLength && isValid;\r\n    }\r\n\r\n    return isValid;\r\n  }\r\n\r\n  validateForm = (e) => {\r\n    let isValidForm = true;\r\n    const formControls = { ...store.getState().loginRedux.formControls };\r\n\r\n    Object.keys(store.getState().loginRedux.formControls).forEach((controlName) => {\r\n      let control = { ...store.getState().loginRedux.formControls[controlName] };\r\n      store.dispatch({ type: 'SET_INPUTS_ERROR', control: control, formControls: formControls, controlName: controlName, validateControl: this.validateControl });\r\n      isValidForm &= !control.error;\r\n    });\r\n\r\n    if (!isValidForm)\r\n      e.preventDefault();\r\n\r\n    return isValidForm;\r\n  }\r\n\r\n  onChangeHandler = (e, controlName) => {\r\n    const formControls = { ...store.getState().loginRedux.formControls };\r\n    const control = { ...formControls[controlName] };\r\n    control.value = e.target.value;\r\n    store.dispatch({ type: 'SET_INPUTS_ERROR', control: control, formControls: formControls, controlName: controlName, validateControl: this.validateControl });\r\n  }\r\n\r\n  onClickButton = (e) => {\r\n    return this.validateForm(e);\r\n  }\r\n\r\n  renderInputs = () => {\r\n    return Object.keys(store.getState().loginRedux.formControls).map((controlName, index) => {\r\n      const control = store.getState().loginRedux.formControls[controlName];\r\n      return (\r\n        <TextField\r\n          key={controlName + index}\r\n          type={control.type}\r\n          id={control.id}\r\n          value={control.value}\r\n          label={control.label}\r\n          name={control.name}\r\n          margin={control.margin}\r\n          variant={control.variant}\r\n          autoComplete={control.autoComplete}\r\n          helperText={control.helperText}\r\n          error={control.error}\r\n          onChange={e => this.onChangeHandler(e, controlName)}\r\n        />\r\n      )\r\n    });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    store.dispatch({ type: 'SET_DATA', data: { email: store.getState().loginRedux.formControls['email'].value, password: store.getState().loginRedux.formControls['password'].value } });\r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <AuthFormRedux\r\n          formState={store.getState().loginRedux}\r\n          handleSubmit={this.handleSubmit}\r\n          handleFormReset={this.handleFormReset}\r\n          onClickButton={this.onClickButton}\r\n          renderInputs={this.renderInputs}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  };\r\n};\r\n\r\nexport default LoginRedux;","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { Field, reduxForm, formValueSelector } from 'redux-form'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport validateEmail from '../../validEmail';\r\nimport { FormStyleRedux, ButtonStyle, TextStyle } from '../../views/Counter/style';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst validate = values => {\r\n  const errors = {}\r\n  const requiredFields = [\r\n    'email',\r\n    'password'\r\n  ]\r\n  requiredFields.forEach(field => {\r\n    if (!values[field]) {\r\n      errors[field] = 'Required'\r\n    }\r\n  })\r\n  if (!validateEmail(values.email)) {\r\n    errors.email = 'Invalid email address'\r\n  }\r\n  if (values.password != null && !(values.password.length >= 6)) {\r\n\r\n    errors.password = 'Too short'\r\n  }\r\n  return errors\r\n}\r\n\r\nconst renderTextField = ({\r\n  label,\r\n  input,\r\n  meta: { touched, invalid, error },\r\n  ...custom\r\n}) => (\r\n    <TextField\r\n      label={label}\r\n      placeholder={label}\r\n      error={touched && invalid}\r\n      helperText={touched && error}\r\n      {...input}\r\n      {...custom}\r\n    />\r\n  )\r\n\r\nlet LoginReduxForm = props => {\r\n  const { handleSubmit, pristine, submitting, emailValue, passwordValue, invalid } = props;\r\n  return (\r\n    <React.Fragment>\r\n      <form style={FormStyleRedux} onSubmit={handleSubmit}>\r\n        <Field name=\"email\" variant='outlined' component={renderTextField} label=\"Email\" />\r\n        <Field name=\"password\" type=\"password\" variant='outlined' component={renderTextField} label=\"Password\" />\r\n        <Link to={{\r\n          pathname: '/login-redux-form/success', state: {\r\n            store: {\r\n              email:\r\n                emailValue, password: passwordValue\r\n            }\r\n          }\r\n        }} style={{ textDecoration: 'none' }}>\r\n          <button type=\"submit\" style={ButtonStyle} disabled={invalid || submitting || pristine}  >\r\n            SEND\r\n        </button>\r\n        </Link>\r\n      </form>\r\n      <div style={TextStyle}>\r\n        <Typography variant=\"h5\">\r\n          Email: {emailValue}\r\n        </Typography>\r\n        <Typography variant=\"h5\">\r\n          Password: {passwordValue}\r\n        </Typography>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nLoginReduxForm = reduxForm({\r\n  form: 'loginReduxForm', // a unique identifier for this form\r\n  validate,\r\n})(LoginReduxForm);\r\n\r\n// Decorate with connect to read form values\r\nconst selector = formValueSelector('loginReduxForm') // <-- same as form name\r\nLoginReduxForm = connect(state => {\r\n  // can select values individually\r\n  const emailValue = selector(state, 'email')\r\n  const passwordValue = selector(state, 'password')\r\n  return {\r\n    emailValue,\r\n    passwordValue\r\n  }\r\n})(LoginReduxForm)\r\n\r\nexport default LoginReduxForm;","import React from 'react'\r\nimport LoginReduxForm from './LoginReduxForm';\r\n\r\nconst LRF = () => {\r\n    return (\r\n        <LoginReduxForm/>\r\n    )\r\n};\r\n\r\nexport default LRF;","import React from 'react';\r\nimport { TextStyle } from '../Counter/style'\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst NotFound = () => (\r\n    <div style={TextStyle}>\r\n       <Typography variant=\"h1\" component=\"h2\" gutterBottom>\r\n       OOPS, ERROR 404\r\n      </Typography>\r\n    </div>\r\n );\r\n\r\n export default NotFound;","import React from 'react';\r\nimport { TextStyle } from '../Counter/style'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { styled } from '@material-ui/styles';\r\nimport { compose, spacing, palette } from '@material-ui/system';\r\n\r\nconst Box = styled('div')(\r\n   compose(\r\n      spacing,\r\n      palette,\r\n   ),\r\n);\r\n\r\nconst SuccessRedux = (props) => {\r\n   const { store } = props.location.state;\r\n   return (\r\n      <div style={TextStyle}>\r\n         <Box color=\"white\" bgcolor=\"gray\" p={1}>\r\n            <Typography variant=\"h3\">\r\n               Email: {store.formControls['email'].value}\r\n            </Typography>\r\n            <Typography variant=\"h3\">\r\n               Password: {store.formControls['password'].value}\r\n            </Typography>\r\n         </Box>\r\n      </div>\r\n   )\r\n};\r\n\r\nexport default SuccessRedux;","import React from 'react';\r\nimport { TextStyle } from '../Counter/style'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { styled } from '@material-ui/styles';\r\nimport { compose, spacing, palette } from '@material-ui/system';\r\n\r\nconst Box = styled('div')(\r\n   compose(\r\n      spacing,\r\n      palette,\r\n   ),\r\n);\r\n\r\nconst SuccessReduxForm = (props) => {\r\n   const { store } = props.location.state;\r\n   return (\r\n      <div style={TextStyle}>\r\n         <Box color=\"white\" bgcolor=\"gray\" p={1}>\r\n            <Typography variant=\"h3\">\r\n               Email: {store.email}\r\n            </Typography>\r\n            <Typography variant=\"h3\">\r\n               Password: {store.password}\r\n            </Typography>\r\n         </Box>\r\n      </div>\r\n   )\r\n};\r\n\r\nexport default SuccessReduxForm;","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport CounterParent from '../Counter/CounterParent';\r\nimport About from \"../../views/TabsRouter/About\";\r\nimport Login from \"../Authentication/Login\";\r\nimport LoginRedux from \"../Authentication/LoginRedux\";\r\nimport LRF from \"../Authentication/LRF\";\r\nimport NotFound from \"../../views/TabsRouter/NotFound\";\r\nimport SuccessRedux from \"../../views/TabsRouter/SuccessRedux\";\r\nimport SuccessReduxForm from \"../../views/TabsRouter/SuccessReduxForm\";\r\n\r\n\r\nconst Main = () => (\r\n    <main>\r\n        <Switch>\r\n            <Route exact path={process.env.PUBLIC_URL + '/'} />\r\n            <Route exact path={process.env.PUBLIC_URL + '/about'} component={About} />\r\n            <Route exact path={process.env.PUBLIC_URL + '/counters'} component={CounterParent} />\r\n            <Route exact path={process.env.PUBLIC_URL + '/login'} component={Login} />\r\n            <Route exact path={process.env.PUBLIC_URL + '/login-redux'} component={LoginRedux} />\r\n            <Route exact path={process.env.PUBLIC_URL + '/login-redux/success'} component={SuccessRedux} />\r\n            <Route exact path={process.env.PUBLIC_URL + '/login-redux-form'} component={LRF} />\r\n            <Route exact path={process.env.PUBLIC_URL + '/login-redux-form/success'} component={SuccessReduxForm} />\r\n            <Route exact path={process.env.PUBLIC_URL + '/404'} component={NotFound} />\r\n            <Redirect to={process.env.PUBLIC_URL + '/404'} />\r\n        </Switch>\r\n    </main>\r\n)\r\n\r\nexport default Main;","import React from 'react';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport { connect } from 'react-redux';\r\n\r\nconst App = () => (\r\n        <React.Fragment>\r\n            <Header />\r\n            <Main />\r\n        </React.Fragment>\r\n)\r\n\r\nconst mapStateToProps = state => ({ data: state.loginRedux.data, formControls: state.loginRedux.formControls });\r\nexport default connect(mapStateToProps)(App);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './components/TabsRouter/App';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}