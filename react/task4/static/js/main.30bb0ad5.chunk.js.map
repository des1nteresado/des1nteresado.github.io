{"version":3,"sources":["views/Counter/style.js","routes.js","components/TabsRouter/Header.js","views/Counter/index.js","components/Counter/CounterContainer.js","components/Counter/CounterParent.js","views/TabsRouter/About.js","views/Authentication/AuthForm.js","components/Authentication/Login.js","validEmail.js","views/TabsRouter/NotFound.js","components/TabsRouter/Main.js","components/TabsRouter/App.js","index.js"],"names":["ButtonStyle","backgroundColor","color","GridStyle","justifyContent","marginRight","TextStyle","textAlign","fontSize","marginTop","CounterContainerStyle","display","flexWrap","TabStyle","indicatorColor","FormStyle","alignItems","width","margin","FormWrapperStyle","routes","Header","hidden","_React$useState","React","useState","window","location","pathname","urls","indexOf","_React$useState2","Object","slicedToArray","value","setValue","style","react_default","a","createElement","Paper","square","Tabs","centered","onChange","event","newValue","Tab","label","component","Link","to","Counter","props","counterState","count","Grid","container","spacing","item","Button","variant","onClick","handleIncrement","id","handleDecrement","handleReset","CounterContainer","views_Counter","initialState","CounterParent","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","randomInteger","min","max","rand","Math","random","round","newCounters","state","counters","map","counter","setState","handleAddCounter","concat","handleRemoveCounter","length","pop","handleResetCounter","bind","assertThisInitialized","console","log","nextProps","nextState","prevProps","prevState","document","querySelector","snapshot","scrollToComponent","offset","align","duration","_this2","Fragment","counterObj","Counter_CounterContainer","key","Component","About","AuthForm","onSubmit","e","handleSubmit","onReset","handleFormReset","renderInputs","type","onClickButton","Typography","formState","formControls","data","Login","email","name","autoComplete","helperText","error","validation","required","password","minLength","setInputsError","control","controlName","validateControl","isValid","trim","test","String","toLowerCase","validateForm","isValidForm","objectSpread","keys","forEach","preventDefault","onChangeHandler","target","index","TextField","stringifyFormData","sentData","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","get","err","return","JSON","stringify","FormData","reset","Authentication_AuthForm","NotFound","gutterBottom","Main","react_router","exact","path","App","MuiThemeProvider_default","TabsRouter_Header","TabsRouter_Main","ReactDOM","render","react_router_dom","TabsRouter_App","getElementById"],"mappings":"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","file":"static/js/main.30bb0ad5.chunk.js","sourcesContent":["const ButtonStyle = {\r\n    backgroundColor: \"#b71c1c\",\r\n    color: \"#fff\"\r\n};\r\n\r\nconst GridStyle = {\r\n    justifyContent: \"center\",\r\n    marginRight: \"80px\"\r\n};\r\n\r\nconst TextStyle = {\r\n    textAlign: \"center\",\r\n    fontSize: 22,\r\n    marginTop: \"30px\"\r\n}\r\n\r\nconst CounterContainerStyle = {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center'\r\n};\r\n\r\nconst TabStyle = {\r\n    indicatorColor: 'secondary',\r\n}\r\n\r\nconst FormStyle = {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: '250px',\r\n    margin: 'auto'\r\n}\r\n\r\nconst FormWrapperStyle = {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: '250px'\r\n}\r\n\r\nconst FormButStyle = {\r\n    backgroundColor: \"#b71c1c\",\r\n    color: '#fff',\r\n    marginTop: '10px'\r\n}\r\n\r\nconst MainFormStyle = {\r\n    display: 'flex',\r\n    justifyContent: 'space-between'\r\n}\r\n\r\nexport { ButtonStyle, TextStyle, GridStyle, MainFormStyle,  CounterContainerStyle, TabStyle, FormStyle, FormWrapperStyle, FormButStyle };\r\n","export default [\r\n    '/react/task4/about',\r\n    '/react/task4/counters',\r\n    '/react/task4/login',\r\n    '/'\r\n];","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Paper, Tabs, Tab } from '@material-ui/core';\r\nimport { TabStyle } from '../../views/Counter/style';\r\nimport urls from '../../routes';\r\n\r\nconst Header = () => {\r\n    let hidden = false;\r\n    const [value, setValue] = React.useState(() => {\r\n        if (window.location.pathname === '/react/task4/404' || urls.indexOf(window.location.pathname) === -1) {\r\n            hidden = true;\r\n            return false;\r\n        }\r\n        return urls.indexOf(window.location.pathname) === 3 ? false : urls.indexOf(window.location.pathname);\r\n    });\r\n\r\n    function handleChange(event, newValue) {\r\n        setValue(newValue);\r\n    }\r\n\r\n    const style = hidden === true ? { display: 'none' } : {};\r\n\r\n    return (\r\n        <div style={style}>\r\n            <Paper square>\r\n                <Tabs value={value} centered style={TabStyle} onChange={handleChange}>\r\n                    <Tab label=\"about us\" component={Link} to=\"/react/task4/about\" />\r\n                    <Tab label=\"counters\" component={Link} to=\"/react/task4/counters\" />\r\n                    <Tab label=\"sign in\" component={Link} to=\"/react/task4/login\" />\r\n                </Tabs>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PropTypes from 'prop-types';\r\nimport { ButtonStyle, TextStyle, GridStyle } from './style';\r\n\r\nconst Counter = props => {\r\n    return (\r\n        <div>\r\n            <p style={TextStyle}>{props.counterState.count}</p>\r\n            <Grid container style={GridStyle} spacing={5}>\r\n                <Grid item>\r\n                    <Button style={ButtonStyle} variant=\"contained\" color=\"primary\" onClick={() => props.handleIncrement(props.counterState.id)}>+</Button>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Button style={ButtonStyle} variant=\"contained\" color=\"primary\" onClick={() => props.handleDecrement(props.counterState.id)}>-</Button>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Button style={ButtonStyle} variant=\"contained\" color=\"primary\" onClick={() => props.handleReset(props.counterState.id)}>reset</Button>\r\n                </Grid>\r\n            </Grid>\r\n        </div >\r\n    );\r\n}\r\n\r\nCounter.propTypes = {\r\n    count: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number\r\n    ]),\r\n    handleIncrement: PropTypes.func.isRequired,\r\n    handleDecrement: PropTypes.func.isRequired,\r\n    handleReset: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Counter;\r\n","import React from \"react\";\r\nimport Counter from \"../../views/Counter\";\r\n\r\nconst CounterContainer = props => {\r\n    return (\r\n        <Counter {...props} />\r\n    );\r\n}\r\n\r\nexport default CounterContainer;","import React from \"react\";\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport CounterContainer from \"./CounterContainer\";\r\nimport { CounterContainerStyle, TextStyle, GridStyle } from '../../views/Counter/style'\r\nimport scrollToComponent from 'react-scroll-to-component';\r\n\r\nconst initialState = [{ count: 0, id: 1 }]\r\n\r\nclass CounterParent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            counters: initialState\r\n        };\r\n\r\n        this.handleIncrement = this.handleIncrement.bind(this);\r\n        this.handleDecrement = this.handleDecrement.bind(this);\r\n        this.handleReset = this.handleReset.bind(this);\r\n\r\n        console.log(\"constructor:CounterParent\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"componentDidMount:CounterParent\");\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        console.log(\"shouldComponentUpdate:CounterParent\");\r\n        return (nextState.counters !== this.state.counters);\r\n    }\r\n\r\n    getSnapshotBeforeUpdate(prevProps, prevState) {\r\n        console.log(\"getSnapshotBeforeUpdate:CounterParent\")\r\n        if (prevState.counters.length > 30 && prevState.counters.length < this.state.counters.length) {\r\n            const element = document.querySelector(\"#counters:last-child\");\r\n            return element;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        console.log(\"componentDidUpdate:CounterParent\")\r\n        if (snapshot !== null) {\r\n            console.log(snapshot);\r\n            scrollToComponent(snapshot, {\r\n                offset: 1000,\r\n                align: 'bottom',\r\n                duration: 1500\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        console.log(\"componentWillUnmount:CounterParent\");\r\n    }\r\n\r\n    randomInteger = (min, max) => {\r\n        var rand = min - 0.5 + Math.random() * (max - min + 1)\r\n        rand = Math.round(rand);\r\n        return rand;\r\n    }\r\n\r\n    handleIncrement = (id) => {\r\n        let newCounters = this.state.counters.map((counter) => {\r\n            if (counter.id === id) {\r\n                return ({ count: counter.count + 1, id: counter.id })\r\n            }\r\n            return counter;\r\n        })\r\n        this.setState({\r\n            counters: newCounters\r\n        });\r\n    }\r\n\r\n    handleDecrement = (id) => {\r\n        let newCounters = this.state.counters.map((counter) => {\r\n            if (counter.id === id) {\r\n                return ({ count: counter.count - 1, id: counter.id })\r\n            }\r\n            return counter;\r\n        })\r\n        this.setState({\r\n            counters: newCounters\r\n        });\r\n    }\r\n\r\n    handleReset = (id) => {\r\n        let newCounters = this.state.counters.map((counter) => {\r\n            if (counter.id === id) {\r\n                return ({ count: 0, id: counter.id })\r\n            }\r\n            return counter;\r\n        })\r\n        this.setState({\r\n            counters: newCounters\r\n        });\r\n    }\r\n\r\n    handleAddCounter = () => {\r\n        let newCounters = this.state.counters.map((counter) => {\r\n            if (counter.count % 2 === 0 && counter.count !== 0) {\r\n                return ({ count: counter.count + 1, id: counter.id })\r\n            }\r\n            return counter;\r\n        })\r\n        newCounters = newCounters.concat([{ count: 0, id: this.randomInteger(0, 1000000) }]);\r\n        this.setState({\r\n            counters: newCounters\r\n        });\r\n    }\r\n\r\n    handleRemoveCounter = () => {\r\n        let newCounters = this.state.counters;\r\n        if (newCounters.length > 1) {\r\n            newCounters = newCounters.map((counter) => {\r\n                if (counter.count % 2 !== 0 && counter.count !== 0) {\r\n                    return ({ count: counter.count - 1, id: counter.id })\r\n                }\r\n                return counter;\r\n            })\r\n            newCounters.pop();\r\n        }\r\n        this.setState({\r\n            counters: newCounters\r\n        });\r\n    };\r\n\r\n    handleResetCounter = () => {\r\n        this.setState({\r\n            counters: initialState\r\n        });\r\n    }\r\n\r\n    render() {\r\n        console.log(\"render:CounterParent\")\r\n        return (\r\n            <React.Fragment>\r\n                <p style={TextStyle}>{this.state.counters.length}</p>\r\n                <Grid container style={GridStyle} spacing={5}>\r\n                    <Grid item>\r\n                        <Button onClick={() => this.handleAddCounter()}>add counter</Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button onClick={() => this.handleRemoveCounter()}>remove counter</Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button onClick={() => this.handleResetCounter()}>reset counter</Button>\r\n                    </Grid>\r\n                </Grid>\r\n                <div id=\"counters\" style={CounterContainerStyle}>\r\n                    {\r\n                        this.state.counters.map((counterObj) =>\r\n                            <CounterContainer\r\n                                handleReset={this.handleReset}\r\n                                handleIncrement={this.handleIncrement}\r\n                                handleDecrement={this.handleDecrement}\r\n                                key={counterObj.id}\r\n                                counterState={counterObj}\r\n                            />\r\n                        )\r\n                    }\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CounterParent;","import React from 'react';\r\nimport { TextStyle } from '../Counter/style'\r\n\r\nconst About = () => (\r\n    <div style={TextStyle}>\r\n      <h1>About company!</h1>\r\n    </div>\r\n  )\r\n\r\nexport default About;","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { FormStyle, FormWrapperStyle, ButtonStyle, TextStyle } from '../../views/Counter/style';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AuthForm = props => {\r\n    return (\r\n        <React.Fragment>\r\n          <form style={FormStyle} onSubmit={(e) => props.handleSubmit(e)} onReset={props.handleFormReset}>\r\n            <div style={FormWrapperStyle}>\r\n              {\r\n                props.renderInputs()\r\n              }\r\n              <Button type='submit' style={ButtonStyle} onClick={(e) => props.onClickButton(e)} > Send </Button>\r\n            </div>\r\n          </form>\r\n          <div style={TextStyle}>\r\n            <Typography variant=\"h5\">\r\n              Email: {props.formState.formControls['email'].value}\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              Password: {props.formState.formControls['password'].value}\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              Data to be sent:\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              {props.formState.data}\r\n            </Typography>\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n}\r\n\r\nAuthForm.propTypes = {\r\n    handleSubmit: PropTypes.func.isRequired,\r\n    handleFormReset: PropTypes.func.isRequired,\r\n    onClickButton: PropTypes.func.isRequired,\r\n    renderInputs: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AuthForm;","import React from 'react';\r\nimport validateEmail from '../../validEmail';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AuthForm from '../../views/Authentication/AuthForm'\r\n\r\nexport default class Login extends React.Component {\r\n  initialState = {\r\n    data: null,\r\n    formControls: {\r\n      email: {\r\n        id: 'outlined-email-input',\r\n        value: '',\r\n        type: 'email',\r\n        label: 'Email',\r\n        name: 'email',\r\n        margin: 'normal',\r\n        variant: 'outlined',\r\n        autoComplete: 'email',\r\n        helperText: '',\r\n        error: false,\r\n        validation: {\r\n          required: true,\r\n          email: true\r\n        }\r\n      },\r\n      password: {\r\n        id: 'outlined-password-input',\r\n        value: '',\r\n        type: 'password',\r\n        label: 'Password',\r\n        name: 'password',\r\n        margin: 'normal',\r\n        variant: 'outlined',\r\n        autoComplete: \"current-password\",\r\n        helperText: '',\r\n        error: false,\r\n        validation: {\r\n          required: true,\r\n          minLength: 6\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.initialState;\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleFormReset = this.handleFormReset.bind(this);\r\n    this.setInputsError = this.setInputsError.bind(this);\r\n    this.validateControl = this.validateControl.bind(this);\r\n    this.validateForm = this.validateForm.bind(this);\r\n    this.onClickButton = this.onClickButton.bind(this);\r\n    this.renderInputs = this.renderInputs.bind(this);\r\n    this.stringifyFormData = this.stringifyFormData.bind(this);\r\n  }\r\n\r\n  setInputsError = (control, formControls, controlName) => {\r\n    control.error = !this.validateControl(control.value, control.validation);\r\n    if (control.error && control.type === 'email') {\r\n      control.helperText = 'Invalid email adress.';\r\n    } else if (control.error && control.type === 'password') {\r\n      control.helperText = 'Min. pass length 6 characters.';\r\n    }\r\n    else {\r\n      control.helperText = '';\r\n    }\r\n    formControls[controlName] = control;\r\n    this.setState({\r\n      formControls\r\n    });\r\n  }\r\n\r\n  validateControl = (value, validation) => {\r\n    let isValid = true;\r\n\r\n    if (!validation) {\r\n      return true;\r\n    }\r\n\r\n    if (validation.required) {\r\n      isValid = value.trim() !== '' && isValid;\r\n    }\r\n\r\n    if (validation.email) {\r\n      isValid = validateEmail(value) && isValid;\r\n    }\r\n\r\n    if (validation.minLength) {\r\n      isValid = value.length >= validation.minLength && isValid;\r\n    }\r\n\r\n    return isValid;\r\n  }\r\n\r\n  validateForm = (e) => {\r\n    let isValidForm = true;\r\n    const formControls = { ...this.state.formControls };\r\n\r\n    Object.keys(this.state.formControls).forEach((controlName) => {\r\n      let control = { ...this.state.formControls[controlName] };\r\n      this.setInputsError(control, formControls, controlName);\r\n      isValidForm &= !control.error;\r\n    });\r\n\r\n    if (!isValidForm)\r\n      e.preventDefault();\r\n\r\n    return isValidForm;\r\n  }\r\n\r\n  onChangeHandler = (e, controlName) => {\r\n    const formControls = { ...this.state.formControls };\r\n    const control = { ...formControls[controlName] };\r\n    control.value = e.target.value;\r\n    this.setInputsError(control, formControls, controlName);\r\n  }\r\n\r\n  onClickButton = (e) => {\r\n    return this.validateForm(e);\r\n  }\r\n\r\n  renderInputs = () => {\r\n    return Object.keys(this.state.formControls).map((controlName, index) => {\r\n      const control = this.state.formControls[controlName];\r\n      return (\r\n        <TextField\r\n          key={controlName + index}\r\n          type={control.type}\r\n          id={control.id}\r\n          value={control.value}\r\n          label={control.label}\r\n          name={control.name}\r\n          margin={control.margin}\r\n          variant={control.variant}\r\n          autoComplete={control.autoComplete}\r\n          helperText={control.helperText}\r\n          error={control.error}\r\n          onChange={e => this.onChangeHandler(e, controlName)}\r\n        />\r\n      )\r\n    });\r\n  }\r\n\r\n  stringifyFormData = (sentData) => {\r\n    const data = {};\r\n    for (let key of sentData.keys()) {\r\n      data[key] = sentData.get(key);\r\n    }\r\n    return JSON.stringify(data);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    const data = new FormData(event.target);\r\n    event.preventDefault();\r\n    event.target.reset();\r\n    this.setState({\r\n      data: this.stringifyFormData(data)\r\n    });\r\n    console.log('Email: ' + this.state.formControls['email'].value + ' Password: ' + this.state.formControls['password'].value);\r\n  }\r\n\r\n  handleFormReset = (e) => {\r\n    this.setState(() => this.initialState);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <AuthForm\r\n          formState={this.state}\r\n          handleSubmit={this.handleSubmit}\r\n          handleFormReset={this.handleFormReset}\r\n          onClickButton={this.onClickButton}\r\n          renderInputs={this.renderInputs}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  };\r\n};","export default function validateEmail(email) {\r\n    let validStructure = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@(([[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return validStructure.test(String(email).toLowerCase());\r\n  };","import React from 'react';\r\nimport { TextStyle } from '../Counter/style'\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst NotFound = () => (\r\n    <div style={TextStyle}>\r\n       <Typography variant=\"h1\" component=\"h2\" gutterBottom>\r\n       OOPS, ERROR 404\r\n      </Typography>\r\n    </div>\r\n );\r\n\r\n export default NotFound;","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport CounterParent from '../Counter/CounterParent';\r\nimport About from \"../../views/TabsRouter/About\";\r\nimport Login from \"../Authentication/Login\";\r\nimport NotFound from \"../../views/TabsRouter/NotFound\";\r\n\r\nconst Main = () => (\r\n    <main>\r\n        <Switch>\r\n            <Route exact path='/react/task4/'/>\r\n            <Route path='/react/task4/about' component={About} />\r\n            <Route path='/react/task4/counters' component={CounterParent} />\r\n            <Route path='/react/task4/login' component={Login} />\r\n            <Route path='/react/task4/404' component={NotFound} />\r\n            <Redirect to='/react/task4/404' />\r\n        </Switch>\r\n    </main>\r\n)\r\n\r\nexport default Main;","import React from 'react';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\n\r\nconst App = () => (\r\n    <MuiThemeProvider>\r\n        <React.Fragment>\r\n            <Header />\r\n            <Main />\r\n        </React.Fragment>\r\n    </MuiThemeProvider>\r\n)\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './components/TabsRouter/App';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n    <App />\r\n    </BrowserRouter>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}